{"ts":1364830081143,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364830088004,"patch":[[{"diffs":[[1,"/*\nChocolateChip-UI\nVersion 2.1.1\nLicense: BSD\nThis version works with ChocolateChip.js, jQuery or Zepto. \nFor jQuery, ChocolateChip-UI requires as a minimum version 1.7.1\nWhen using Zepto, make sure you have the following modules included in your build: zepto, event, detect, fx, fx_methods, ajax, form, data, selector, stack. \n*/\n\n(function() {\n    var _$ = null;\n\tif (window.$chocolatechip) {\n\t\t_$ = window.$chocolatechip;\n\t\tvar $$ = window.$$chocolatechip;\n\t\tvar _cc = true;\n\t}\n\tif (window.jQuery) {\n\t\t_$ = window.jQuery;\n\t\tvar _jq = true;\n\t}\n\tif (window.Zepto) {\n\t\t_$ = window.Zepto;\n\t\tvar _zo = true;\n\t}\n\tvar $ = _$;\n\n\tUIConvertElementMethods = function(elementMethods) {\n\t\tfor (var method in elementMethods) {\n\t\t\tif (_jq || _zo) {\n\t\t\t\t$.fn[method] = elementMethods[method];\n\t\t\t} else {\n\t\t\t\tif (elementMethods.hasOwnProperty(method)) {\n\t\t\t\t\tvar obj = {};\n\t\t\t\t\tobj[method] = elementMethods[method];\n\t\t\t\t\t$.extend(HTMLElement.prototype, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\t\n\n\tif (_jq || _zo) {\n\t\t$.extend($, {\n\t\t\tconcat : function ( args ) {\n\t\t\t\tif (args instanceof Array) {\n\t\t\t\t\treturn args.join('');\n\t\t\t\t} else {\n\t\t\t\t\targs = $.slice.apply(arguments);\n\t\t\t\t\treturn String.prototype.concat.apply(args.join(''));\n\t\t\t\t}\n\t\t\t},\n         capitalize : function ( str ) {\n\t\t\t\treturn str.charAt(0).toUpperCase() + str.substring(1).toLowerCase();\n\t\t\t}\n\t\t});\n\t\t$.fn.findAll = function ( selector ) {\n\t\t\treturn $(this).find(selector);\n\t\t};\n\t\t$.fn.childElements = function() {\n\t\t\treturn this.children();\n\t\t};\n\t\t$.fn.toggleClassName = function( firstClassName, secondClassName ) {\n\t\t\tif (!$(this).hasClass(firstClassName)) {\n\t\t\t\t$(this).addClass(firstClassName);\n\t\t\t\t$(this).removeClass(secondClassName);\n\t\t\t} else {\n\t\t\t\t$(this).removeClass(firstClassName);\n\t\t\t\t$(this).addClass(secondClassName);\n\t\t\t}\n\t\t};\n\t}\n\t\n\t$.defaultCheckboxColor = '#fff';\n\t$.checkboxHeight = 10;\n\t// Define methods to extend HTML elements:\n\tvar elementMethods = {\n\t\n\t\treduceToNode : function ( ) {\n\t\t\tvar self = this.nodeName ? this : this[0];\n\t\t\treturn self;\n\t\t},\n\t\t\n\t\tUIIdentifyChildNodes : function ( ) {\n\t\t\tvar ctx = this.nodeType === 1 ? this : this[0];\n\t\t\tvar kids = ctx.childElementCount;\n\t\t\tfor (var i = 0; i < kids; i++) {\n\t\t\t\tctx.children[i].setAttribute('ui-child-position', i);\n\t\t\t}\n\t\t},\n\t\t\n\t\t_first : function ( ) {\n\t\t\tif (_cc) {\n\t\t\t\treturn this.first();\n\t\t\t} else {\n\t\t\t\treturn $(this).children().first();\n\t\t\t}\n\t\t},\n\t\t\n\t\t_last : function ( ) {\n\t\t\tif (_cc) {\n\t\t\t\treturn this.last();\n\t\t\t} else {\n\t\t\t\treturn $(this).children().last();\n\t\t\t}\n\t\t},\n\t\t\n\t\tUIBlock : function ( opacity ) {\n\t\t\topacity = opacity ? \" style='opacity:\" + opacity + \"'\" : \"\";\n\t\t\t$(this).before(\"<mask\" + opacity + \"></mask>\");\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tUIUnblock : function ( ) {\n\t\t\t$._each($.els('mask'), function(idx, ctx) {\n\t\t\t\t$(ctx).remove();\n\t\t\t});\n\t\t\t$('view[ui-navigation-status=current]').removeAttr('aria-hidden');\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tariaHide : function ( ) {\n\t\t\tvar $this = $(this);\n\t\t\t$this.attr('aria-hidden','true');\n\t\t\tvar elems = $.els('*', $this);\n\t\t\t$._each(elems, function(idx, ctx) {\n\t\t\t\t$(ctx).data('savedAriaHidden', $(ctx).attr('aria-hidden'));\n\t\t\t\tif ($(ctx).attr('aria-hidden')) {\n\t\t\t\t\t$(ctx).data('savedAriaHidden', $(ctx).attr('aria-hidden'));\n\t\t\t\t}\n\t\t\t\t$(ctx).attr('aria-hidden','true');\n\t\t\t});\n\t\t\t$this.addClass('ariaHidden');\n\t\t},\n\t\t\n\t\tariaShow : function ( ) {\n\t\t\tvar $this = $(this);\n\t\t\t$this.attr({'aria-hidden':'false'});\n\t\t\tvar elems = $.els('*', $this);\n\t\t\t$._each(elems, function(idx, ctx) {\n\t\t\t\tvar saved;\n\t\t\t\ttry {\n\t\t\t\t\tsaved = $(ctx).data('savedAriaHidden');\n\t\t\t\t} catch(err) {}\n\t\t\t\tif (!saved) {\n\t\t\t\t\t$(ctx).removeAttr('aria-hidden');\n\t\t\t\t} else {\n\t\t\t\t\t$(ctx).attr('aria-hidden', saved);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$this.removeClass('ariaHidden');\n\t\t},\n\t\t\n\t\tariaFocus : function ( ) {\n\t\t\tvar self = this.reduceToNode();\n\t\t\tif (self) {\n\t\t\t\tif (self.tagName !== \"A\" && self.tagName !== \"TEXTAREA\"){\n\t\t\t\t  $(self).attr('tabindex', -1);\n\t\t\t\t}\n\t\t\t\t$(self).focus();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tariaFocusChild : function ( selector ) {\n\t\t\tselector = selector || 'h1';\n\t\t\tvar self = this;\n\t\t\t$(self).find(selector).ariaFocus();\n    \t\treturn this;\n\t\t},\n\t\t\n\t\tUIRemovePopupBtnEvents : function(eventType, eventName) {\n\t\t\t$(this).off(eventType, eventName, false);\n\t\t},\n\t\t\n\t\tUIToggleButtonLabel : function ( label1, label2 ) {\n\t\t\tif ($('label', this).text() === label1) {\n\t\t\t\t$('label', this).text(label2);\n\t\t\t} else {\n\t\t\t\t$('label', this).text(label1);\n\t\t\t}\n\t\t},\n\t\t\n\t\tUISelectionList : function ( callback ) {\n\t\t\tvar $this = this;\n\t\t\tvar listitems = this.childElements();\n\t\t\tif (_jq || _zo) {\n\t\t\t\tlistitems = $(listitems);\n\t\t\t} \n\t\t\t$._each(listitems, function(idx, node) {\n\t\t\t\tif (node.nodeName.toLowerCase() === 'tablecell') {\n\t\t\t\t\tvar checkmark = '<checkmark><span>&#x2713</span></checkmark>';\n\t\t\t\t\t$(node).attr('role','radio');\n\t\t\t\t\t$(node).attr('aria-checked','false');\n\t\t\t\t\t$(node).append(checkmark);\n\t\t\t\t\t$(node).on($.userAction, function() {\n\t\t\t\t\t\tif ($.userAction === 'touchend') {\n\t\t\t\t\t\t\t$(node).removeClass('touched');\n\t\t\t\t\t\t\t$(node).attr('aria-checked','false');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar $this = this;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tif ($.UIScrollingActive) return;\n\t\t\t\t\t\t\t$._each(listitems, function(idx, check) {\n\t\t\t\t\t\t\t\t$(check).removeClass('selected');\n\t\t\t\t\t\t\t\t$(check).removeClass('touched');\n\t\t\t\t\t\t\t\t$(check).attr('aria-checked','false');\t\t\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$($this).addClass('selected');\n\t\t\t\t\t\t\t$($this).attr('aria-checked','true');\n\t\t\t\t\t\t\t$($this).find('input').checked = true; \n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback.call(callback, $($this).find('input'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},100);\n\t\t\t\t\t});\n\t\t\t\t\t$(node).on('touchstart', function() {\n\t\t\t\t\t\t$(this).addClass('touched');\n\t\t\t\t\t});\n\t\t\t\t\t$(node).on('touchcancel', function() {\n\t\t\t\t\t\t$(this).removeClass('touched');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\tUISwitchControl : function (callback) {\n\t\t\tcallback = callback || function() { return false; };\n\t\t\tvar item = this.reduceToNode();\n\t\t\tif (item.nodeName.toLowerCase()===\"switchcontrol\") {\n\t\t\t\t$(item).attr('role','radio');\n\t\t\t\tcallback.call(callback, this);\n\t\t\t\tvar checkbox = $(this).find('input');\n\t\t\t\tcheckbox = checkbox.reduceToNode();\n\t\t\t\tif ($(this).hasClass(\"off\")) {\n\t\t\t\t\t$(this).toggleClassName(\"on\", \"off\");\n\t\t\t\t\t$(this).attr('aria-checked','true');\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t\t$(this).find(\"thumb\").focus();\n\t\t\t\t} else {\n\t\t\t\t\t$(this).attr('aria-checked','false');\n\t\t\t\t\t$(this).toggleClassName(\"on\", \"off\");\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\t\n\t\tUICreateSwitchControl : function( opts ) {\n\t\t\t/*\n\t\t\t\t{\n\t\t\t\t\tid : \"anID\",\n\t\t\t\t\tnamePrefix : \"customer\",\n\t\t\t\t\tcustomClass : \"specials\",\n\t\t\t\t\tstatus : \"on\",\n\t\t\t\t\tkind : \"traditional\",\n\t\t\t\t\tuiImplements: 'attention',\n\t\t\t\t\tlabelValue : [\"on\",\"off\"],\n\t\t\t\t\tvalue : \"$1000\",\n\t\t\t\t\tcallback : function() {console.log('This is great!');},\t\n\t\t\t\t}\n\t\t\t*/\n\t\t\tvar id = opts.id;\n\t\t\tvar namePrefix = '';\n\t\t\tif (opts.namePrefix) {\n\t\t\t\tnamePrefix = \"name='\" + opts.namePrefix + \".\" + opts.id + \"'\";\n\t\t\t} else {\n\t\t\t\tnamePrefix = \"name='\" + id + \"'\";\n\t\t\t}\n\t\t\tvar customClass = \" \";\n\t\t\tcustomClass += opts.customClass ? opts.customClass : \"\";\n\t\t\tvar status = opts.status || \"off\";\n\t\t\tvar kind = opts.kind ? \" ui-kind='\" + opts.kind + \"'\" : \"\";\n\t\t\tvar uiImplements = '';\n\t\t\tif (opts.uiImplements) {\n\t\t\t\tuiImplements = \" ui-implements='\" + opts.uiImplements + \"'\";\n\t\t\t}\n\t\t\tvar label1 = \"ON\";\n\t\t\tvar label2 = \"OFF\";\n\t\t\tif (opts.kind === \"traditional\") {\n\t\t\t\tif (!!opts.labelValue) {\n\t\t\t\t\tlabel1 = opts.labelValue[0];\n\t\t\t\t\tlabel2 = opts.labelValue[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar value = opts.value || \"\";\n\t\t\tvar callback = opts.callback || function() { return false; };\n\t\t\tvar label = (opts.kind === \"traditional\") ? $.concat('<label ui-implements=\"on\">', label1, '</label><thumb></thumb><label ui-implements=\"off\">', label2, '</label>') : \"<thumb></thumb>\";\n\t\t\tvar uiswitch = $.concat('<switchcontrol ', kind, ' class=\"', status, \" \", customClass, '\" ', uiImplements, 'id=\"', id, '\"', '>', label, '<input type=\"checkbox\" ', namePrefix, ' style=\"display: none;\" value=\"', value, '\"></switchcontrol>');\n\t\t\tif ($(this).css(\"position\")  !== \"absolute\") {\n\t\t\t\tthis.css(\"position: relative;\");\n\t\t\t}\n\t\t\t$(this).append(uiswitch);\n\t\t\tvar newSwitchID = \"#\" + id;\n\t\t\tif (_zo) {\n\t\t\t\t$(newSwitchID).find(\"input\").attr(\"checked\", (status === \"on\" ? true : false));\n\t\t\t} else {\n\t\t\t\t$(newSwitchID).find(\"input\").prop(\"checked\", (status === \"on\" ? true : false));\n\t\t\t}\n\t\t\t$(newSwitchID).on($.userAction, function() {\n\t\t\t\t$(this).UISwitchControl(callback);\n\t\t\t});\n\t\t},\n\t\t\n\t\tUIInitSwitchToggling : function() {\n\t\t\tvar switches = $.els('switchcontrol', $.app);\n\t\t\tvar $this = this;\n\t\t\t$._each(switches, function(idx, ctx) {\n\t\t\t\tvar item = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\tvar checkbox = $(item).find('input[type=\"checkbox\"]');\n\t\t\t\tcheckbox = checkbox.reduceToNode();\n\t\t\t\tif ($(item).hasClass('on')) {\n\t\t\t\t\t$(item).checked = true;\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(item).checked = false;\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t\t$(item).on($.userAction, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.parentNode.style.backgroundImage = 'none';\n\t\t\t\t\t$(item).UISwitchControl();\n\t\t\t\t});\n\t\t\t\t$(item).on('touchstart', function() {\n\t\t\t\t\t$(this).addClass('touched');\n\t\t\t\t});\n\t\t\t\t$(item).on('touchend', function() {\n\t\t\t\t\t$(this).removeClass('touched');\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t\n\t\tUICreateSegmentedControl : function(opts) {\n\t\t\tposition = opts.position || null;\n\t\t\tvar segmentedControl = \"<segmentedcontrol\";\n\t\t\tif (opts.id) {\n\t\t\t\tsegmentedControl += \" id='\" + opts.id + \"'\";\n\t\t\t}\n\t\t\tif (opts.placement) {\n\t\t\t\tsegmentedControl += \" ui-bar-align='\" + opts.placement + \"'\";\n\t\t\t}\n\t\t\tif (opts.selectedSegment || opts.selectedSegment === 0) {\n\t\t\t\tsegmentedControl += \" ui-selected-index='\" + opts.selectedSegment + \"'\";\n\t\t\t} else {\n\t\t\t\tsegmentedControl += \" ui-selected-index=''\";\n\t\t\t}\n\t\t\tif (opts.container) {\n\t\t\t\tsegmentedControl += \" ui-segmented-container='#\" + opts.container + \"'\";\n\t\t\t}\n\t\t\tvar segClass = opts.cssClass || \"\";\n\t\t\tsegmentedControl += \">\";\n\t\t\tif (opts.numberOfSegments) {\n\t\t\t\tsegments = opts.numberOfSegments;\n\t\t\t\tvar count = 1;\n\t\t\t\tfor (var i = 0; i < segments; i++) {\n\t\t\t\t\tsegmentedControl += \"<uibutton\";\n\t\t\t\t\tsegmentedControl += \" id='\" + $.UIUuid() + \"'\";\n\t\t\t\t\tsegmentedControl += \" class='\" + segClass[count-1];\n\t\t\t\t\tif (opts.selectedSegment || opts.selectedSegment === 0) {\n\t\t\t\t\t\tif (opts.selectedSegment === i) {\n\t\t\t\t\t\t\tsegmentedControl += \" selected'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.disabledSegment) {\n\t\t\t\t\t\tif (opts.disabledSegment === i) {\n\t\t\t\t\t\t\tsegmentedControl += \" disabled'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsegmentedControl += \"'\";\n\t\t\t\n\t\t\t\t\tsegmentedControl += \" ui-kind='segmented'\";\n\t\t\t\t\tif (opts.placementOfIcons) {\n\t\t\t\t\t\tsegmentedControl += \" ui-icon-alignment='\" + opts.placementOfIcons[count-1] + \"'\";\n\t\t\t\t\t}\n\t\t\t\t\tsegmentedControl += \">\";\n\t\t\t\t\tif (opts.iconsOfSegments) {\n\t\t\t\t\t\tif (!!opts.iconsOfSegments[i]) {\n\t\t\t\t\t\tsegmentedControl += \"<icon ui-implements='icon-mask' style='-webkit-mask-box-image: url(icons/\" + opts.iconsOfSegments[count-1] +\".\" + opts.fileExtension[count-1] + \")'  ui-implements='icon-mask'></icon>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.titlesOfSegments) {\n\t\t\t\t\t\tsegmentedControl += \"<label>\" + opts.titlesOfSegments[count-1] + \"</label>\";\n\t\t\t\t\t}\n\t\t\t\t\tsegmentedControl += \"</uibutton>\";\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tsegmentedControl += \"</segmentedcontrol>\";\n\t\t\t\t$(this).append(segmentedControl);\n\t\t\t}\n\t\t},\n\t\t\n\t\tUISegmentedControl : function( container, callback ) {\n\t\t\tvar that = $(this);\n\t\t\tvar val = null;\n\t\t\tcallback = callback || $.noop;\n\t\t\tif (!$(this).attr('ui-selected-segment')) {\n\t\t\t\t$(this).attr('ui-selected-segment', '');\n\t\t\t}\n\t\t\tif ($(this).attr('ui-selected-index')) {\n\t\t\t\tval = $(this).attr('ui-selected-index');\n\t\t\t\ttry {\n\t\t\t\t\tvar kids = $(this).childElements();\n\t\t\t\t\tvar seg = kids.eq(val);\n\t\t\t\t\tseg = $(seg).attr('id');\n\t\t\t\t\t$(this).attr('ui-selected-segment', seg);\n\t\t\t\t\tkids.eq(val).addClass('selected');\n\t\t\t\t} catch(e) {}\n\t\t\t} else {\n\t\t\t\t$._each($(this).childElements(), function(idx, ctx) {\n\t\t\t\t\tif ($(ctx).hasClass('selected')) {\n\t\t\t\t\t\tif (idx === 0) {\n\t\t\t\t\t\t\t$(ctx).attr('ui-selected-index', '0');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(ctx).attr('ui-selected-index', idx);\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t});\n\t\t\t}\n\t\t\tif (container) {\n\t\t\t\t$(this).attr('ui-segmented-container', container);\n\t\t\t\tcontainer = $(container);\n\t\t\t\tif (val || val == 0) { \n\t\t\t\t\tcontainer.attr('ui-selected-index', val);\n\t\t\t\t}\n\t\t\t\tvar containerChildren = _cc ? [].slice.apply(container.children) : $(container).children();\n\t\t\t\t$._each(containerChildren, function(idx, child) {\n\t\t\t\t\t$(child).css('display','none');\n\t\t\t\t});\n\t\t\t\tcontainerChildren.eq(val).css('display','block');\n\t\t\t\tthat.attr('ui-segmented-container', ('#' + container.attr('id')));\n\t\t\t\tvar selectedIndex = $(this).attr('ui-selected-index');\n\t\t\t\tcontainer.closest('scrollpanel').data('ui-scroller').refresh();\n\t\t\t\t\n\t\t\t}\n\t\t\t$._each($(this).childElements(), function(idx, button) {\n\t\t\t\tif (!$(button).attr('id')) {\n\t\t\t\t\t$(button).attr('id', $.UIUuid());\n\t\t\t\t}\n\t\t\t\tif (!that.attr('ui-selected-segment')) {\n\t\t\t\t\tif ($(button).hasClass('selected')) {\n\t\t\t\t\t\tthat.attr('ui-selected-segment', $(button).attr('id'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$(button).on($.userAction, function() {\n\t\t\t\t\tvar selectedSegment = that.attr('ui-selected-segment');\n\t\t\t\t\tselectedSegment = $('#'+selectedSegment);\n\t\t\t\t\tvar selectedIndex = that.attr('ui-selected-index');\n\t\t\t\t\tvar childPosition = null;\n\t\t\t\t\tvar container = null;\n\t\t\t\t\tvar ancestor = $(this).closest('segmentedcontrol');\n\t\t\t\t\tif (ancestor.attr('ui-segmented-container')) {\n\t\t\t\t\t\tcontainer = ancestor.attr('ui-segmented-container');\n\t\t\t\t\t}\n\t\t\t\t\tvar containerChildren = $(container).childElements();\n\t\t\t\t\tvar oldSelection = null;\n\t\t\t\t\tif (ancestor.attr('ui-selected-index')) {\n\t\t\t\t\t\toldSelection = ancestor.attr('ui-selected-index');\n\t\t\t\t\t}\n\t\t\t\t\tvar uisi = null;\n\t\t\t\t\tif (!selectedSegment) {\n\t\t\t\t\t\tuisi = $(this).attr('ui-child-position');\n\t\t\t\t\t\tthat.attr('ui-selected-index', uisi);\n\t\t\t\t\t\tthat.attr('ui-selected-segment', $(this).attr('id'));\n\t\t\t\t\t\t$(this).addClass('selected');\n\t\t\t\t\t\tchildPosition = $(this).attr('ui-child-position');\n\t\t\t\t\t\tcontainerChildren.eq(val).css('display','none');\n\t\t\t\t\t\tcontainerChildren.eq(childPosition).css('display','none');\n\t\t\t\t\t} \n\t\t\t\t\tif (selectedSegment) {\n\t\t\t\t\t\tuisi = $(this).attr('ui-child-position');\n\t\t\t\t\t\tthat.attr('ui-selected-index', uisi);\n\t\t\t\t\t\tselectedSegment.removeClass('selected');\n\t\t\t\t\t\tthat.attr('ui-selected-segment', $(this).attr('id'));\n\t\t\t\t\t\t$(this).addClass('selected');\n\t\t\t\t\t\tchildPosition = $(this).attr('ui-child-position');\n\t\t\t\t\t\tif (that.attr('ui-segmented-container')) {\n\t\t\t\t\t\t\tcontainer = $(that.attr('ui-segmented-container'));\n\t\t\t\t\t\t\tcontainerChildren.eq(oldSelection).css('display','none');\n\t\t\t\t\t\t\tcontainerChildren.eq(uisi).css('display','block');\n\t\t\t\t\t\t\tcontainerChildren.eq(selectedSegment.attr('ui-child-position')).css('display','none');\n\t\t\t\t\t\t\tcontainer.closest('scrollpanel').data('ui-scroller').refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$(this).addClass('selected');\n\t\t\t\t\t\tcallback.call(callback, button);\n\t\t\t\t});\n\t\t\t});\n\t\t\t$(this).UIIdentifyChildNodes();\n\t\t},\n\t\t\n\t\tUICreateTabBar : function ( opts ) {\n\t\t/*\n\t\t\tid: 'mySpecialTabBar',\n\t\t\timagePath: '/images/icons/',\n\t\t\tnumberOfTabs: 4,\n\t\t\ttabLabels: [\"Refresh\", \"Add\", \"Info\", \"Downloads\", \"Favorite\"],\n\t\t\ticonsOfTabs: [\"refresh\", \"add\", \"info\", \"downloads\", \"top_rated\"],\n\t\t\tselectedTab: 0,\n\t\t\tdisabledTab: 3\n\t\t*/\n\t\tvar id = opts.id || $.UIUuid();\n\t\tvar imagePath = opts.imagePath || 'icons\\/';\n\t\tvar numberOfTabs = opts.numberOfTabs || 1;\n\t\tvar tabLabels = opts.tabLabels;\n\t\tvar iconsOfTabs = opts.iconsOfTabs;\n\t\tvar selectedTab = opts.selectedTab || 0;\n\t\tvar disabledTab = opts.disabledTab || null;\n\t\tvar tabbar = [\"<tabbar ui-selected-tab='\", selectedTab, \"'>\"];\n\t\t$(this).attr(\"ui-tabbar-id\", id);\n\t\t\tfor (var i = 0; i < numberOfTabs; i++) {\n\t\t\t\ttabbar.push(\"<uibutton ui-implements='tab' \");\n\t\t\t\tif (i === selectedTab || i === disabledTab) {\n\t\t\t\t\ttabbar.push(\"class='\");\n\t\t\t\t\tif (i === selectedTab) {\n\t\t\t\t\t\ttabbar.push(\"selected\");\n\t\t\t\t\t}\n\t\t\t\t\tif (i === disabledTab) {\n\t\t\t\t\t\ttabbar.push(\"disabled\");\n\t\t\t\t\t}\n\t\t\t\t\ttabbar.push(\"'\");\n\t\t\t\t}\n\t\t\t\ttabbar.push(\"><icon style='-webkit-mask-image: url(\");\n\t\t\t\ttabbar.push(imagePath);\n\t\t\t\ttabbar.push(iconsOfTabs[i]);\n\t\t\t\ttabbar.push(\".svg);'></icon>\");\n\t\t\t\ttabbar.push(\"<label>\");\n\t\t\t\ttabbar.push(tabLabels[i]);\n\t\t\t\ttabbar.push(\"</label></uibutton>\");\n\t\t\t}\n\t\t\ttabbar.push(\"</tabbar>\");\n\t\t\t$(this).append(tabbar.join(''));\n\t\t\tvar subviews = $.els(\"subview\", this);\n\t\t\tsubviews.eq(selectedTab).addClass(\"selected\");\n\t\t\tthis.UITabBar();\n\t\t},\n\t\n\t\tUITabBar : function ( ) {\n\t\t\tvar tabs = $.els('tabbar > uibutton[ui-implements=tab]', this);\n\t\t\tvar tabbar = $('tabbar', this);\n\t\t\ttabbar.UIIdentifyChildNodes();\n\t\t\tvar subviews = $.els('subview', this);\n\t\t\t$._each(subviews, function(idx, ctx) {\n\t\t\t\t$(ctx).addClass('unselected');\n\t\t\t});\n\t\t\tvar selectedTab = tabbar.attr('ui-selected-tab') || 0;\n\t\t\tsubviews.eq(selectedTab).toggleClassName('unselected','selected');\n\t\t\ttabs.eq(selectedTab).addClass('selected');\n\t\t\tvar tabSelect =  $.userAction === 'click' ? 'click' : 'touchstart';\n\t\t\t$._each(tabs, function(idx, tab) {\n\t\t\t\t$(tab).on(tabSelect, function() {\n\t\t\t\t\tif ($(tab).hasClass('disabled') || $(tab).hasClass('selected')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar whichTab = $(tab).closest('tabbar').attr('ui-selected-tab');\n\t\t\t\t\ttabs.eq(whichTab).removeClass('selected');\n\t\t\t\t\t$(tab).addClass('selected');\n\t\t\t\t\tsubviews.eq(whichTab).removeClass('selected');\n\t\t\t\t\tsubviews.eq(whichTab).addClass('unselected');\n\t\t\t\t\tsubviews.eq($(tab).attr('ui-child-position')).addClass('selected');\n\t\t\t\t\tsubviews.eq(tab.getAttribute('ui-child-position')).removeClass('unselected');\n\t\t\t\t\ttabbar.attr('ui-selected-tab', $(tab).attr('ui-child-position'));\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t\n\t\tUITabBarForViews : function ( ) {\n\t\t\tvar tabs = $.els('tabbar > uibutton[ui-implements=tab]', this);\n\t\t\t$('tabbar', this).UIIdentifyChildNodes();\n\t\t\tvar tabbar = $('tabbar', this);\n\t\t\tvar views = $.els('view', this);\n\t\t\t$._each(views, function(idx, view) {\n\t\t\t\t$(view).attr('ui-navigation-status','upcoming');\n\t\t\t});\n\t\t\tvar selectedTab = tabbar.attr('ui-selected-tab') || 0;\n\t\t\tviews.eq(selectedTab).attr('ui-navigation-status','current');\n\t\t\ttabs.eq(selectedTab).addClass('selected');\n\t\t\tvar tabSelect =  $.userAction === 'click' ? 'click' : 'touchstart';\n\t\t\t$._each(tabs, function(idx, tab) {\n\t\t\t\t$(tab).on(tabSelect, function() {\n\t\t\t\t\tif ($(tab).hasClass('disabled') || $(tab).hasClass('selected')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar whichTab = $(tab).closest('tabbar').attr('ui-selected-tab');\n\t\t\t\t\ttabs.eq(whichTab).removeClass('selected');\n\t\t\t\t\t$(tab).addClass('selected');\n\t\t\t\t\tviews.eq(whichTab).attr('ui-navigation-status', 'upcoming');\n\t\t\t\t\tviews.eq($(tab).attr('ui-child-position')).attr('ui-navigation-status', 'current');\n\t\t\t\t\ttabbar.attr('ui-selected-tab', $(tab).attr('ui-child-position'));\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t\n\t\tUISegmentedPagingControl : function ( ) {\n\t\t\tvar segmentedPager = $('segmentedcontrol[ui-implements=\"segmented-paging\"]', this);\n\t\t\tvar pagingOrientation = segmentedPager.attr('ui-paging');\n\t\t\tsegmentedPager.attr('ui-paged-subview', '0');\n\t\t\tsegmentedPager._first().addClass('disabled');\n\t\t\tvar subviews = $.els('subview', this);\n\t\t\tsegmentedPager.attr('ui-pagable-subviews', subviews.length);\n\t\t\tvar childPosition = 0;\n\t\t\t$._each(subviews, function(idx, ctx) {\n\t\t\t\t$(ctx).attr('ui-navigation-status', 'upcoming');\n\t\t\t\t$(ctx).attr('ui-child-position', childPosition);\n\t\t\t\tchildPosition++;\n\t\t\t\t$(ctx).attr('ui-paging-orient', pagingOrientation);\n\t\t\t});\n\t\t\tvar prevButton = $(segmentedPager._first());\n\t\t\tvar nextButton = $(segmentedPager._last());\n\t\t\tsubviews.eq(0).attr('ui-navigation-status', 'current');\n\t\t\tsegmentedPager.delegate('uibutton', 'click', function(ctx) {\n\t\t\t\tvar button = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\tif ($(button).hasClass('disabled')) return;\n\t\t\t\tvar pager = segmentedPager; //$(button).closest('segmentedcontrol');\n\t\t\t\t// Previous Button:\n\t\t\t\tif (button.isSameNode(button.parentNode.firstElementChild)) {\n\t\t\t\t\tif (pager.attr('ui-paged-subview') == 1) {\n\t\t\t\t\t\t$(button).addClass('disabled');\n\t\t\t\t\t\tpager.attr('ui-paged-subview', '0');\n\t\t\t\t\t\tsubviews.eq(0).attr('ui-navigation-status', 'current');\n\t\t\t\t\t\tsubviews.eq(1).attr('ui-navigation-status', 'upcoming');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(subviews[pager.attr('ui-paged-subview') - 1 ]).attr( 'ui-navigation-status', 'current');\n\t\t\t\t\t\t$(subviews[pager.attr('ui-paged-subview')]).attr('ui-navigation-status', 'upcoming');\n\t\t\t\t\t\tpager.attr('ui-paged-subview', pager.attr('ui-paged-subview')-1);\n\t\t\t\t\t\t$(button).next().removeClass('disabled');\n\t\t\t\t\t\tif (pager.attr('ui-paged-subview') <= 0) {\n\t\t\t\t\t\t\t$(button).addClass('disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevButton.removeClass('disabled');\n\t\t\t\t\tvar pagedSubview = Number(pager.attr('ui-paged-subview'));\n\t\t\t\t\tif (pagedSubview === Number(segmentedPager.attr('ui-pagable-subviews'))-2){\n\t\t\t\t\t\t$(button).addClass('disabled');\n\t\t\t\t\t}\n\t\t\t\t\t$(subviews[pagedSubview]).attr('ui-navigation-status', 'traversed');\n\t\t\t\t\t$(subviews[pagedSubview+1]).attr('ui-navigation-status', 'current');\n\t\t\t\t\tpager.attr('ui-paged-subview', pagedSubview + 1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\tUIExpander : function ( opts ) {\n\t\t\topts = opts || {};\n\t\t\tvar status = opts.status || 'expanded';\n\t\t\tvar title = opts.title || 'Open';\n\t\t\tvar altTitle = opts.altTitle || 'Close';\n\t\t\tvar expander = $(this);\n\t\t\tvar panel = $('panel', this);\n\t\t\tvar header = '<header><label></label></header>';\n\t\t\tpanel.attr('ui-height', parseInt(panel.css('height'), 10));\n\t\t\t$(this).prepend(header);\n\t\t\tif (status === 'expanded') {\n\t\t\t\texpander.toggleClassName('ui-status-expanded', 'ui-status-collapsed');\n\t\t\t\t$('label', this).text(altTitle);\n\t\t\t\tpanel.style.height = panel.getAttribute('ui-height') + 'px';\n\t\t\t\tpanel.css('opacity: 1;');\n\t\t\t} else {\n\t\t\t\t$('label', this).text(title);\n\t\t\t\tpanel.css({'height': '0px', 'opacity': 0});\n\t\t\t\texpander.toggleClass('ui-status-collapsed', 'ui-status-expanded');\n\t\t\t}\n\t\t\t$('header', expander).on('click', function() {\n\t\t\t\tvar $this = $(this);\n\t\t\t\tif (panel.css('height') == '10px' || panel.css('height') == '0px') {\n\t\t\t\t\tpanel.css('height', panel.attr('ui-height') + 'px');\n\t\t\t\t\tpanel.css('opacity', 1);\n\t\t\t\t\t$('label', $this).text(altTitle);\n\t\t\t\t\texpander.toggleClassName('ui-status-collapsed', 'ui-status-expanded');\n\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tpanel.css({'height': '0px', 'opacity': 0});\n\t\t\t\t\t$('label', $this).text(title);\n\t\t\t\t\texpander.toggleClassName('ui-status-expanded', 'ui-status-collapsed');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\tUICalculateNumberOfLines : function () {\n\t\t\tvar lineHeight = parseInt($(this).css('line-height'), 10);\n\t\t\tvar height = parseInt($(this).css('height'), 10);\n\t\t\tvar lineNums = Math.floor(height / lineHeight);\n\t\t\treturn lineNums;\n\t\t},\n\t\t\n\t\tUIParagraphEllipsis : function () {\n\t\t\tvar lines = $(this).UICalculateNumberOfLines();\n\t\t\tvar $this = this.reduceToNode();\n\t\t\t$this.style.WebkitLineClamp = lines;\n\t\t},\n\t\t\n\t\tUIProgressBar : function ( opts ) {\n\t\t\topts = opts || {};\n\t\t\tvar className = opts.className || false;\n\t\t\tvar width = opts.width || 100;\n\t\t\tvar speed = opts.speed || 5;\n\t\t\tvar position = opts.position || 'after';\n\t\t\tvar margin = opts.margin || '10px auto';\n\t\t\tvar class_name = className ? ' class=\"'+className+'\"': '';\n\t\t\tvar bar = $.concat('<progressbar', class_name, \" style='width: \", width, \"px;\", \" -webkit-animation-duration: \", speed, \"s;\", \" margin: \", margin, \";'\", \"></progressbar>\");\n\t\t\treturn $(this).append(bar);\n\t\t},\n\t\t\n\t\tUIHideNavBarHeader : function ( ) {\n\t\t\t$(this).css({'visibility': 'hidden', 'position': 'absolute'});\n\t\t},\n\t\t\n\t\tUIShowNavBarHeader : function ( ) {\n\t\t\t$(this).css({'visibility': 'visible', 'position': 'static'});\n\t\t},\n\t\t\n\t\tUIActionSheet : function(opts) {\n\t\t\tvar that = this;\n\t\t\tvar actionSheetID = opts.id;\n\t\t\tvar actionSheetColor = opts.color || 'undefined';\n\t\t\tvar title = $.concat('<h3>', opts.title, '</h3>');\n\t\t\tvar uiButtons = \"\", uiButtonObj, uiButtonImplements, uiButtonTitle, uiButtonCallback;\n\t\t\tif (!!opts.uiButtons) {\n\t\t\t\t$._each(opts.uiButtons, function(idx, button) {\n\t\t\t\t\tuiButtonTitle = button.title;\n\t\t\t\t\tuiButtonImplements = button.uiButtonImplements || \"\";\n\t\t\t\t\tuiButtonCallback = button.callback;\n\t\t\t\t\tactionSheetID.trim();\n\t\t\t\t\tuiButtons += $.concat(\"<uibutton ui-kind='action' \", ' ui-implements=\"', uiButtonImplements, '\" class=\"stretch\" onclick=\"', uiButtonCallback, '(\\'#', actionSheetID, '\\')\"><label>', uiButtonTitle, \"</label></uibutton>\");\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar createActionSheet = function() {\n\t\t\t\tvar color = '';\n\t\t\t\tif (actionSheetColor) color = $.concat(\" ui-action-sheet-color='\", actionSheetColor, \"'\");\n\t\t\t\tvar actionSheetStr = $.concat(\"<actionsheet id='\", actionSheetID, \"' class='hidden' aria-hidden='true' role='dialog' style='display:none' ui-contains='action-buttons'\", color, \"><scrollpanel ui-scroller='\", $.UIUuid(), \"'><panel>\", title, uiButtons, \"<uibutton ui-kind='action' ui-implements='cancel' class='stretch' onclick='$.UIHideActionSheet(\\\"#\", actionSheetID, \"\\\")'><label>Cancel</label></uibutton></panel></scrollpanel></actionsheet>\");\n\t\t\t\t$(that).append(actionSheetStr);\n\t\t\t};\n\t\t\tcreateActionSheet();\n\t\t\tvar actionsheet = $(\"#\" + actionSheetID);\n\t\t\tactionsheet.attr('aria-hidden','true');\n\t\t\tvar scrollpanel = actionsheet.find('scrollpanel');\n\t\t\tvar scroller =  scrollpanel.reduceToNode();\n\t\t\tscrollpanel.data('ui-scroller', new iScroll(scroller));\n\t\t\tvar actionSheetUIButtons = $.concat(\"#\", actionSheetID, \" uibutton\");\n\t\t\t$._each($.els(actionSheetUIButtons), function(idx, button) {\n\t\t\t\t$(button).on(\"click\", function() {\n\t\t\t\t\t$.UIHideActionSheet();\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t\n\t\tUICenterElementToParent : function ( ) {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.reduceToNode()) return;\n\t\t\tvar parent = $this.parent();\n\t\t\tvar position;\n\t\t\tvar parentTopPadding = 0;\n\t\t\tvar parentLeftPadding = 0;\n\t\t\tif ($this.css('position') !== 'absolute') position = 'relative';\n\t\t\telse position = 'absolute';\n\t\t\t\n\t\t\tvar height, width, parentHeight, parentWidth;\n\t\t\tif (position === 'absolute') {\n\t\t\t\theight = $this.clientHeight;\n\t\t\t\twidth = $this.clientWidth;\n\t\t\t\tparentHeight = parent.clientHeight;\n\t\t\t\tparentWidth = parent.clientWidth;\n\t\t\t} else {\n\t\t\t\theight = parseInt($this.css('height'),10);\n\t\t\t\twidth = parseInt($this.css('width'),10);\n\t\t\t\tparentHeight = parseInt(parent.css('height'),10);\n\t\t\t\tparentWidth = parseInt(parent.css('width'),10);\n\t\t\t}\n\t\t\tparentNodeName = parent.reduceToNode();\n\t\t\tif (_jq) {\n\t\t\t\tparentHeight += parseInt(parent.css('padding-top'),10);\n\t\t\t\tparentHeight += parseInt(parent.css('padding-bottom'),10);\n\t\t\t\tparentWidth += parseInt(parent.css('padding-left'),10);\n\t\t\t\tparentWidth += parseInt(parent.css('padding-right'),10);\n\t\t\t}\n\t\t\tvar tmpTop, tmpLeft;\n\t\t\tif (parentNodeName.nodeName == 'app') {\n\t\t\t\ttmpTop = ((window.innerHeight /2) + window.pageYOffset) - height /2 + 'px';\n\t\t\t\ttmpLeft = (((window.innerWidth / 2) - width) / 2 + 'px');\n\t\t\t} else {\n\t\t\t\tparentTopPadding = parseInt(parent.css('padding-top'),10);\n\t\t\t\tparentLeftPadding = parseInt(parent.css('padding-left'),10);\n\t\t\t\ttmpTop = (parentHeight /2) - (height /2) - parentTopPadding + 'px';\n\t\t\t\ttmpLeft = (parentWidth / 2) - (width / 2) - parentLeftPadding + 'px';\n\t\t\t}\n\t\t\t$this.css({position: position, left: tmpLeft, top: tmpTop});\n\t\t},\n\t\t\n\t\tUIActivityIndicator : function ( opts ) {\n\t\t\topts = opts || {};\n\t\t\tvar panel;\n\t\t\tvar color = opts.color || '#000';\n\t\t\tvar size = opts.size || '80px';\n\t\t\tvar position = opts.position || null;\n\t\t\tvar modal = opts.modal || false;\n\t\t\tvar modalMessage = opts.modalMessage ? $.concat('<h5 role=\"dialog\">',opts.modalMessage,'</h5>') : '';\n\t\t\tvar modalPanelID = $.UIUuid();\n\t\t\tvar duration = opts.duration || '1s';\n\t\t\tvar style = $.concat('background-color:', color,'; height:', size, ';  width:',size);\n\t\t\tvar spinner;\n\t\t\tif (modal) {\n\t\t\t\tpanel = document.createElement('panel');\n\t\t\t\t$(panel).attr('ui-implements','modal-activity-indicator');\n\t\t\t\t$(panel).attr('aria-visiblity','visible');\n\t\t\t\t$(panel).attr('role','dialog');\n\t\t\t\t$(panel).attr('id', modalPanelID);\n\t\t\t\t$(panel).css({'display':'-webkit-box','-webkit-box-orient':'vertical','-webkit-box-align':'center','-webkit-box-pack':'center', 'background-color':'#282828', 'height': '120px', 'width':'200px', 'z-index': 11111});\n\t\t\t\tspinner = document.createElement('activityindicator');\n\t\t\t\t$(spinner).css({'background-color': '#fff', 'height': '50px', 'width': '50px', '-webkit-animation-duration': duration});\n\t\t\t\t$(spinner).attr('role','progressbar');\n\t\t\t\t$(panel).append(spinner);\n\t\t\t\tif (modalMessage) {\n\t\t\t\t\t$(panel).append(modalMessage);\n\t\t\t\t}\n\t\t\t\t$(this).append(panel);\n\t\t\t\t$('view[ui-navigation-status=current]').css('display','none');\n\t\t\t\t$(panel).ariaFocusChild('h5');\n\t\t\t\t$('view[ui-navigation-status=current]').css('display','-webkit-box');\n\t\t\t\t$(panel).find('h5').focus();\n\t\t\t\t$('#'+modalPanelID).UIBlock('0.5');\n\t\t\t\tvar mp = $('#'+modalPanelID);\n\t\t\t\tmp.UICenterElementToParent();\n\t\t\t\twindow.onresize = function(event) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmp.UICenterElementToParent();\n\t\t\t\t\t} catch(err) {}\n\t\t\t\t};\n\t\t\t\t$(document.body).on('orientationchange', function() {\n\t\t\t\t\t$('#'+modalPanelID).UICenterElementToParent();\n\t\t\t\t}, false);\n\t\t\t} else {\n\t\t\t\tvar webkitAnim = _zo ? null : {'-webkit-animation-duration': duration};\n\t\t\t\tspinner = document.createElement('activityindicator');\n\t\t\t\t$(spinner).css({'background-color': color, 'height': size, 'width': size});\n\t\t\t\tif (webkitAnim) $(spinner).css(webkitAnim);\n\t\t\t\t$(spinner).attr('role','progressbar');\n\t\t\t\tif (position) $(spinner).attr('ui-bar-align', position);\n\t\t\t\treturn $(this).append(spinner);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tRemoveUIAcitivityIndicator : function ( ) {\n\t\t\t$(this).UIUnblock();\n\t\t\ttry {\n\t\t\t\tvar panel = $(this).find('panel[ui-implements=modal-activity-indicator]');\n\t\t\t\tpanel.remove();\n\t\t\t} catch(error) {}\n\t\t\tvar ai = $(this).find('activityindicator');\n\t\t\tai.remove();\n\t\t},\n\t\t\n\t\tUISetTranstionType : function( transition ) {\n\t\t\t$(this).attr('ui-transition-type', transition);\n\t\t},\n\t\t\n\t\tUIFlipSubview : function ( direction ) {\n\t\t\tvar view = $(this).closest(\"view\");\n\t\t\tdirection = direction || \"left\";\n\t\t\tview.UISetTranstionType(\"flip-\" + direction);\n\t\t\t$(this).on(\"click\", function() {\n\t\t\t\tswitch (direction) {\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(1)\").toggleClassName(\"flip-right-front-in\", \"flip-right-front-out\");\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(2)\").toggleClassName(\"flip-right-back-in\", \"flip-right-back-out\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(1)\").toggleClassName(\"flip-left-front-in\",\"flip-left-front-out\");\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(2)\").toggleClassName(\"flip-left-back-in\",\"flip-left-back-out\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"top\":\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(2)\").toggleClassName(\"flip-top-front-in\",\"flip-top-front-out\");\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(1)\").toggleClassName(\"flip-top-back-in\",\"flip-top-back-out\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bottom\":\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(2)\").toggleClassName(\"flip-bottom-front-in\",\"flip-bottom-front-out\");\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(1)\").toggleClassName(\"flip-bottom-back-in\",\"flip-bottom-back-out\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(1)\").toggleClassName(\"flip-right-front-in\",\"flip-right-front-out\");\n\t\t\t\t\t\tview.find(\"subview:nth-of-type(2)\").toggleClassName(\"flip-right-back-in\",\"flip-right-back-out\");\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\tUIPopSubview : function ( ) {\n\t\t\tvar view = $(this).closest(\"view\");\n\t\t\tview.UISetTranstionType(\"pop\");\n\t\t\t$(this).on(\"click\", function() {\n\t\t\t\t$(\"subview:nth-of-type(2)\", view).toggleClassName(\"pop-in\",\"pop-out\");\t\n\t\t\t});\n\t\t},\n\t\t\n\t\tUIFadeSubview : function ( ) {\n\t\t\tvar view = $(this).closest(\"view\");\n\t\t\tview.UISetTranstionType(\"fade\");\n\t\t\tview.attr(\"ui-transition-type\", \"fade\");\n\t\t\t$(this).on(\"click\", function() {\n\t\t\t\t$(\"subview:nth-of-type(2)\", view).toggleClassName(\"fade-in\", \"fade-out\");\n\t\t\t});\n\t\t},\n\t\t\n\t\tUISpinSubview : function ( direction ) {\n\t\t\tvar view = $(this).closest(\"view\");\n\t\t\tview.UISetTranstionType(\"spin\");\n\t\t\tif (!direction || direction === \"left\") {\n\t\t\t\t$(this).UISetTranstionType(\"left\");\n\t\t\t\t$(this).on(\"click\", function() {\n\t\t\t\t\t$(\"subview:nth-of-type(2)\", view).toggleClassName(\"spin-left-in\", \"spin-left-out\");\n\t\t\t\t});\n\t\t\t} else if (direction === \"right\") {\n\t\t\t\t$(this).UISetTranstionType(\"right\");\n\t\t\t\t$(this).on(\"click\", function() {\n\t\t\t\t\t$(\"subview:nth-of-type(2)\", view).toggleClassName(\"spin-right-in\", \"spin-right-out\");\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$(this).UISetTranstionType(\"left\");\n\t\t\t\t$(this).on(\"click\", function() {\n\t\t\t\t\t$(\"subview:nth-of-type(2)\", view).toggleClassName(\"spin-left-in\", \"spin-left-out\");\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t\n\t\tUIRepositionPopover : function() {\n\t\t\tvar triggerElement = $(this).attr(\"data-popover-trigger\"); \n\t\t\tvar popoverOrientation = $(this).attr(\"data-popover-orientation\");\n\t\t\tvar pointerOrientation = $(this).attr(\"data-popover-pointer-orientation\");\n\t\t\tvar popoverPos = $.determinePopoverPosition(triggerElement, popoverOrientation, pointerOrientation);\n\t\t\t$(this).css(popoverPos);\n\t\t\t\n\t\t},\n\t\t\n\t\tUIAdjustPopoverPosition : function() {\n\t\t\tvar screenHeight = window.innerHeight;\n\t\t\tvar screenWidth = window.innerWidth;\n\t\t\tvar popoverHeight = this.offsetHeight;\n\t\t\tvar popoverWidth = this.offsetWidth;\n\t\t\tvar offset = $(this).offset();\n\t\t\tvar popoverTop = offset.top;\n\t\t\tvar popoverLeft = offset.left;\n\t\t\tvar bottomLimit = popoverTop + popoverHeight;\n\t\t\tvar rightLimit = popoverLeft + popoverWidth;\n\t\t\tif (bottomLimit > screenHeight) {\n\t\t\t\tthis.style.top\t= screenHeight - popoverHeight - 10 + \"px\";\n\t\t\t}\n\t\t\tif (rightLimit > screenWidth) {\n\t\t\t\tthis.style.left = screenWidth - 10 + \"px\";\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Convert methods into appropriate forms for Element extension in libraries (ChocolateChp, jQuery, Zepto).\n\tUIConvertElementMethods(elementMethods);\n\t\n\t$(function() {\t\t\t\n\t\t/* \n\t\tFunction to iterate over node collections. This gets used by ChocolateChip.js.\n\t\tjQuery and Zepto already provide this method. It will always return the a plain DOM node so you can wrap it in $() or use $(this) to use node methods such as css(), etc.\n\t\t*/\n\t\tif (_cc) {\n\t\t\t$._each = function ( elements, callback ) {\n\t\t\t\tvar i, key;\n\t\t\t\tif (typeof elements.length === 'number') {\n\t\t\t\t\tfor (i = 0; i < elements.length; i++) {\n\t\t\t\t\t\tif (callback.call(elements[i], i, elements[i]) === false) {\n\t\t\t\t\t\t\treturn elements;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (key in elements) {\n\t\t\t\t\t\tif (callback.call(elements[key], key, elements[key]) === false) {\n\t\t\t\t\t\t\treturn elements;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t  \t};\n\t\t} else {\n\t\t\t$._each = $.each;\n\t\t}\n\t\t\n\t\t// Normalize the way to get a single node for jQuery, Zepto and ChocolateChip.\n\t\t$.el = function ( selector ) {\n\t\t\tif (typeof selector === 'string') {\n\t\t\t\treturn document.querySelector(selector);\n\t\t\t}\n\t\t\tif (selector instanceof Object) {\n\t\t\t\treturn selector[0];\n\t\t\t}\n\t\t\tif (selector.nodeType === 1) {\n\t\t\t\treturn selector;\n\t\t\t}\n\t\t};\n\t\t\n\t\t// Normalize get node collections for jQuery, Zepto and Chocolatechip.\n\t\t$.els = function ( selector, context ) {\n\t\t\tif (_cc) {\n\t\t\t\tif(context) {\n\t\t\t\t\treturn $$(selector, context);\n\t\t\t\t} else {\n\t\t\t\t\treturn $$(selector);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(context) {\n\t\t\t\t\treturn $(selector, context);\n\t\t\t\t} else {\n\t\t\t\t\treturn $(selector);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (!$.show) { \n\t\t\t$.extend(HTMLElement.prototype, {\n\t\t\t\tshow : function ( ) {\n\t\t\t\t\tvar originalDisplay = this.attr('ui-display') || this.css('display');\n\t\t\t\t\tthis.style.display = originalDisplay;\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\thide : function ( ) {\n\t\t\t\t\tvar originalDisplay = this.css('display');\n\t\t\t\t\tthis.attr('ui-display', originalDisplay);\n\t\t\t\t\tthis.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t$.body = $(\"body\");\n\t\t$.app = $(\"app\");\n\t\t$.main = $(\"#main\");\n\t\t$.views = $.els('view');\n\t\t$.touchEnabled = ('ontouchstart' in window);\n\t\t$.userAction = 'touchend';\n\t\tif (!$.touchEnabled) {\n\t\t\tvar stylesheet = $('head').find('link[rel=stylesheet]').attr('href');\n\t\t\tvar stylesheet1 = '';\n\t\t\tif (/min/.test(stylesheet)) {\n\t\t\t\tstylesheet1 = stylesheet.replace(/chui\\.android\\.min\\.css/, 'chui.android.desktop.css');\n\t\t\t} else {\n\t\t\t\tstylesheet1 = stylesheet.replace(/chui\\.android\\.css/, 'chui.android.desktop.css');\n\t\t\t}\n\t\t\t$('head').append(['<link rel=\"stylesheet\" href=\"',stylesheet1,'\">'].join(''));\n\t\t\t$.userAction = 'click';\n\t\t}\n\t\t\t\n\t\tif ( _jq || _zo) {\n\t\t\t$.fn.hasAttr = function(property) {\n\t\t\t\treturn $(this).attr(property);\n\t\t\t};\n\t\t\t$.slice = Array.prototype.slice;\n\t\t}\n\t\t\n\t\tvar navigationListItems = $.els('tablecell');\n\t\t$._each(navigationListItems, function(idx, ctx) {\n\t\t\tif ($(ctx).hasAttr('href')) {\n\t\t\t\t$(ctx).attr('role', 'button');\n\t\t\t\t$(ctx).closest('tableview').attr('role','list');\n\t\t\t} else {\n\t\t\t\t$(ctx).attr('role', 'listitem');\n\t\t\t}\n\t\t});\n\t\t\n\t\t$.extend($, {\n\t\t\t\n\t\t\tUIUuidSeed : 0,\n\t\t\t\n\t\t\tUIUuid : function() {\n\t\t\t\t$.UIUuidSeed++;\n\t\t\t\tvar date = Date.now() + $.UIUuidSeed;\n\t\t\t\treturn date.toString(36);\n\t\t\t},\n\t\t\t\n\t\t\t\n\t\t\tctx : function(node) {\n\t\t\t\ttry {\n\t\t\t\t\treturn (node.nodeType !== 1 && typeof node === 'object' && !node.length) ? node[0] : node;\n\t\t\t\t} catch(err) {};\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tUIEnableScrolling : function ( options ) {\n\t\t\t\toptions = options || {};\n\t\t\t\t$._each($.els(\"scrollpanel\"), function(idx, ctx) {\n\t\t\t\t\tvar scroller = new iScroll(ctx, options);\n\t\t\t\t\t$(ctx).data(\"ui-scroller\", scroller);\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tUINavigationHistory : ['#main'],\n\t\t\t\n\t\t\tUINavigateBack : function() {\n\t\t\t\tvar parent = $.UINavigationHistory[$.UINavigationHistory.length-1];\n\t\t\t\t$.UINavigationHistory.pop();\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1])\n\t\t\t\t.css('visibility', 'visible');\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1])\n\t\t\t\t.attr('ui-navigation-status', 'current');\n\t\t\t\t\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1])\n\t\t\t\t.attr('aria-hidden', 'false');\n\t\t\t\t$(parent).attr('ui-navigation-status', 'upcoming');\n\t\t\t\t$(parent).attr('aria-hidden', 'true');\n\t\t\t\t$(parent).css('visibility', 'hidden');\n\t\t\t\t if ($.app.attr('ui-kind')==='navigation-with-one-navbar' && $.UINavigationHistory[$.UINavigationHistory.length-1] === '#main') {\n \t\t\t\t\t$('navbar > uibutton[ui-implements=back]', $.app).css('display','none');\n \t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUINavigationListExits : false,\n\n\t\t   UINavigationEvent : false,\n\t\t\t\n\t\t\tUINavigationList : function() {\n\t\t\t\tvar navigateList = function(node) {\n\t\t\t\t\tvar currentNavigatingView = '#main';\n\t\t\t\t\tnode = $(node);\n\t\t\t\t\tnode.attr('role','link');\n\t\t\t\t\tvar href = node.attr('href');\n\t\t\t\t\tif (/^#/.test(href) == false) return;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ($.app.attr('ui-kind')==='navigation-with-one-navbar') {\n\t\t\t\t\t\t\t$('navbar > uibutton[ui-implements=back]', $.app).css('display: block;');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(node.attr('href')).attr('ui-navigation-status', 'current');\n\t\t\t\t\t\t$(node.attr('href')).attr('aria-hidden', 'false');\n\t\t\t\t\t\t$(node.attr('href')).css('visibility', 'visible');\n\t\t\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1]).attr('ui-navigation-status', 'traversed');\n\t\t\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1]).attr('aria-hidden', 'true');\n\t\t\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1]).css('visibility', 'hidden');\n\t\t\t\t\t\tif ($('#main').attr('ui-navigation-status') !== 'traversed') {\n\t\t\t\t\t\t\t$('#main').attr('ui-navigation-status', 'traversed');\n\t\t\t\t\t\t\t$('#main').attr('aria-hidden', 'true');\n\t\t\t\t\t\t\t$('#main').css('visibility', 'hidden');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.UINavigationHistory.push(href);\n\t\t\t\t\t\tcurrentNavigatingView = node.closest('view');\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurrentNavigatingView.on('webkitTransitionEnd', function(event) {\n\t\t\t\t\t\t\tif (_jq) {\n\t\t\t\t\t\t\t\tif (event.type === 'webkitTransitionEnd') {\n\t\t\t\t\t\t\t\t\tnode.removeClass('disabled');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (event.propertyName === '-webkit-transform') {\n\t\t\t\t\t\t\t\t\tnode.removeClass('disabled');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch(err) {} \n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif ($.userAction === 'touchend') {\n\t\t\t\t\t$.app.on('touchstart', 'tablecell', function(ctx) {\n\t\t\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t\t\t$(node).addClass('touched');\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t$(node).removeClass('touched')\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t});\n\t\t\t\t\t$.app.on('touchcancel', 'tablecell', function(ctx) {\n\t\t\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t\t\t$(node).removeClass('touched');\n\t\t\t\t\t});\n\t\t\t\t\t$.app.on('click', 'tablecell', function(ctx) {\n\t\t\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t\t\t$(node).removeClass('touched');\n\t\t\t\t\t\tif ($(node).hasAttr('href')) {\n\t\t\t\t\t\t\t$.UINavigationListExits = true;\t\t\t\t\n\t\t\t\t\t\t\tif ($(node).hasClass('disabled')) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(node).addClass('disabled');\n\t\t\t\t\t\t\t\tnavigateList(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$.app.on('click', 'tablecell', function(ctx) {\n\t\t\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t\t\tif ($(node).hasAttr('href')) {\n\t\t\t\t\t\t\t$.UINavigationListExits = true;\t\t\t\t\n\t\t\t\t\t\t\tif ($(node).hasClass('disabled')) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(node).addClass('disabled');\n\t\t\t\t\t\t\t\tnavigateList(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUINavigateToView : function(viewID) {\n\t\t\t\t$.UINavigationListExits = true;\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1])\n\t\t\t\t\t.attr('ui-navigation-status','traversed');\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1])\n\t\t\t\t\t.attr('aria-hidden', 'true');\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-1])\n\t\t\t\t\t.css('visibility', 'hidden');\n\t\t\t\t$(viewID).attr('ui-navigation-status','current');\n\t\t\t\t$(viewID).attr('aria-hidden', 'false');\n\t\t\t\t$(viewID).css('visibility', 'visible');\n\t\t\t\t$.UINavigationHistory.push(viewID);\n\t\t\t\tif ($.app.attr('ui-kind') === 'navigation-with-one-navbar') {\n\t\t\t\t\t$('navbar uibutton[ui-implements=back]').css({'display':'block'});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUINavigateToNextView : function ( viewID ) {\n\t\t\t\treturn $.UINavigateToView(viewID);\n\t\t\t},\n\t\t\n\t\t\tresetApp : function ( hard ) {\n\t\t\t\tif (hard === \"hard\") {\n\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t} else {\n\t\t\t\t\t$._each($.views, function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).attr(\"ui-navigation-status\", \"upcoming\");\n\t\t\t\t\t\t$(ctx).css(\"visibility\", \"hidden\");\n\t\t\t\t\t});\n\t\t\t\t\t$.main.attr(\"ui-navigation-status\", \"current\");\n\t\t\t\t\t$.main.css(\"visibility\", \"visible\");\n\t\t\t\t\t$.UINavigationHistory = [\"#main\"];\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUITouchedTableCell : null,\n\t\t\t\n\t\t\tsetupAriaForViews : function() {\n\t\t\t\tvar views = $.els('view');\n\t\t\t\t$._each(views, function(idx, ctx) {\n\t\t\t\t\tif ($(ctx).attr('ui-navigation-status') !=='current') {\n\t\t\t\t\t\t$(ctx).attr('aria-hidden', 'true');\n\t\t\t\t\t\t$(ctx).css('visibility', 'hidden');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(ctx).attr('aria-hidden', 'false');\n\t\t\t\t\t\t$(ctx).css('visibility', 'visible');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tUIStepper : function (opts) {\n\t\t\t\tvar stepper = $(opts.selector);\n\t\t\t\tvar defaultValue = null;\n\t\t\t\tvar range = null;\n\t\t\t\tvar step = opts.step;\n\t\t\t\tif (opts.range.start >= 0) {\n\t\t\t\t\tvar rangeStart = opts.range.start || \"\";\n\t\t\t\t\tvar rangeEnd = opts.range.end || \"\";\n\t\t\t\t\tvar tempNum = rangeEnd - rangeStart;\n\t\t\t\t\ttempNum++;\n\t\t\t\t\trange = [];\n\t\t\t\t\tif (step) {\n\t\t\t\t\t\tvar mod = ((rangeEnd-rangeStart)/step);\n\t\t\t\t\t\tif (opts.range.start === 0) {\n\t\t\t\t\t\t\trange.push(0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trange.push(rangeStart);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var i = 1; i < mod; i++) {\n\t\t\t\t\t\t\trange.push(range[i-1] + step);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trange.push(range[range.length-1] + step);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var j = 0; j < tempNum; j++) {\n\t\t\t\t\t\t\trange.push(rangeStart + j);\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar icon = (opts.indicator === \"plus\") ? \"<icon class='indicator'></icon>\" : \"<icon></icon>\";\n\t\t\t\tvar buttonClass = opts.buttonClass ? \" class='\" + opts.buttonClass + \"' \" : \"\";\n\t\t\t\tvar decreaseButton = \"<uibutton \" + buttonClass + \"ui-implements='icon'>\" + icon + \"</uibutton>\";\n\t\t\t\tvar increaseButton = \"<uibutton \" + buttonClass + \"ui-implements='icon'>\" + icon + \"</uibutton>\";\n\t\t\t\tvar stepperTemp = decreaseButton + \"<label ui-kind='stepper-label'></label><input type='text'/>\" + increaseButton;\n\t\t\t\tstepper.append(stepperTemp);\n\t\t\t\tif (opts.range.values) {\n\t\t\t\t\tstepper.data('range-value', opts.range.values.join(','));\n\t\t\t\t}\n\t\t\t\tif (!opts.defaultValue) {\n\t\t\t\t\tif (!!opts.range.start || opts.range.start === 0) {\n\t\t\t\t\t\tdefaultValue = opts.range.start === 0 ? '0': opts.range.start;\n\t\t\t\t\t} else if (opts.range.values instanceof Array) {\n\t\t\t\t\t\tdefaultValue = opts.range.values[0];\n\t\t\t\t\t\t$('uibutton:first-of-type', opts.selector).addClass('disabled');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdefaultValue = opts.defaultValue;\n\t\t\t\t}\n\t\t\t\tif (range) {\n\t\t\t\t\tstepper.data('range-value', range.join(','));\n\t\t\t\t}\n\t\t\t\t$('label[ui-kind=stepper-label]', stepper).text(defaultValue);\n\t\t\t\t$('input', stepper).value = defaultValue;\n\t\t\t\tif (opts.namePrefix) {\n\t\t\t\t\tvar namePrefix = opts.namePrefix + '.' + stepper.id;\n\t\t\t\t\t$('input', stepper).attr('name', namePrefix);\n\t\t\t\t} else {\n\t\t\t\t\t$('input', stepper).attr('name', stepper.id);\n\t\t\t\t}\n\t\t\t\tif (defaultValue === opts.range.start) {\n\t\t\t\t\t$('uibutton:first-of-type', stepper).addClass('disabled');\n\t\t\t\t}\n\t\t\t\tif (defaultValue == opts.range.end) {\n\t\t\t\t\t$('uibutton:last-of-type', stepper).addClass('disabled');\n\t\t\t\t}\n\t\t\t\t$('uibutton:first-of-type', opts.selector).on($.userAction, function(button) {\n\t\t\t\t\t$.decreaseStepperValue.call(this, opts.selector);\n\t\t\t\t});\n\t\t\t\t$('uibutton:last-of-type', opts.selector).on($.userAction, function(button) {\n\t\t\t\t\t$.increaseStepperValue.call(this, opts.selector);\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tdecreaseStepperValue : function(selector) {\n\t\t\t\tvar values = $(selector).data('range-value');\n\t\t\t\tvalues = values.split(',');\n\t\t\t\tvar defaultValue = $('label', selector).text().trim();\n\t\t\t\tvar idx = values.indexOf(defaultValue);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t$('uibutton:last-of-type', selector).removeClass('disabled');\n\t\t\t\t\t$('[ui-kind=stepper-label]', selector).text(values[idx-1]);\n\t\t\t\t\t$('input', selector).val(values[idx-1]);\n\t\t\t\t\tif (idx === 1) {\n\t\t\t\t\t\t$(this).addClass('disabled');\n\t\t\t\t\t} \n\t\t\t\t}\t\n\t\t\t},\t\n\t\t\t\n\t\t\tincreaseStepperValue : function(selector) {\n\t\t\t\tvar values = $(selector).data('range-value');\n\t\t\t\tvalues = values.split(',');\n\t\t\t\tvar defaultValue = $('label', selector).text().trim();\n\t\t\t\tvar idx = values.indexOf(defaultValue);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t$('uibutton:first-of-type', selector).removeClass('disabled');\n\t\t\t\t\t$('label[ui-kind=stepper-label]', selector).text(values[idx+1]);\n\t\t\t\t\t$('input', selector).val(values[idx+1]);\n\t\t\t\t\tif (idx === values.length-2) {\n\t\t\t\t\t\t$(this).addClass('disabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tresetSpinner : function(selector) {\n\t\t\t\tvar value = $(selector).data('range-value');\n\t\t\t\tvalue = value.split(',')[0];\n\t\t\t\t$(selector).find('label').text(value);\n\t\t\t\t$(selector).find('uibutton:first-of-type').addClass('disabled');\n\t\t\t\t$(selector).find('uibutton:last-of-type').removeClass('disabled');\n\t\t\t},\n\t\t\t\n\t\t\tresetStepper : function(selector) {\n\t\t\t\treturn this.resetSpinner(selector);\n\t\t\t}\n\t\t});\n\t\n\t\t\n\t\t$.app.delegate('view','webkitTransitionEnd', function() {\n\t\t\tif (!$('view[ui-navigation-status=current]')) {\n\t\t\t\t$($.UINavigationHistory[$.UINavigationHistory.length-2])\t \n\t\t\t\t\t.attr('ui-navigation-status', 'current');\n\t\t\t\t$.UINavigationHistory.pop(); \n\t\t\t}\t\n\t\t\t$.UINavigationEvent = false;\n\t\t});\n\t\t\n\t\t$.UINavigationList();\n\t\t\n\t\tif ($.userAction === 'touchend') {\n\t\t\t$.app.on('touchstart', 'uibutton', function(ctx) {\n\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t$(node).addClass('touched');\n\t\t\t});\n\t\t\t$.app.on('touchend', 'uibutton', function(ctx) {\n\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t$(node).removeClass('touched');\n\t\t\t\tif ($(node).attr('ui-implements') === 'back') {\n\t\t\t\t\tif ($.UINavigationListExits) {\n\t\t\t\t\t\t$.UINavigateBack();\n\t\t\t\t\t\t$.UINavigationEvent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.app.on('touchcancel', 'uibutton', function(ctx) {\n\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t$(node).removeClass('touched');\n\t\t\t});\n\t\t} else {\n\t\t\t$.app.on($.userAction, 'uibutton', function(ctx) {\n\t\t\t\tvar node = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\tif ($(node).attr('ui-implements') === 'back') {\n\t\t\t\t\tif ($.UINavigationListExits) {\n\t\t\t\t\t\t$.UINavigateBack();\n\t\t\t\t\t\t$.UINavigationEvent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\t\n\t\t};\n\t\t\n\t\t$.UIEnableScrolling();\n\t\t\n\t\t//$.setupAriaForViews();\n\t\t\n\t\t$.app.UIInitSwitchToggling();\n\t\t\n\t\t$.extend($, {\n\t\t\tUIPaging : function( selector, opts ) {\n\t\t\t\tvar myPager = new iScroll( selector.firstElementChild, opts );\n\t\t\t\tvar stack = null;\n\t\t\t\tstack = $('stack', selector);\n\t\t\t\tvar scrollerPanels = stack.childElements();\n\t\t\t\t$(selector).parent().attr('ui-scroller', 'myPager');\n\t\t\t\tvar indicatorsWidth = $(selector).parent().css('width');\n\t\t\t\tvar guid = $.UIUuid();\n\t\t\t\tvar indicators = '<stack id=\"' + guid + '\" ui-implements=\"indicators\" role=\"radiogroup\" style=\"width:\"' + indicatorsWidth + ';\">';\n\t\t\t\tscrollerPanels.eq(0).addClass('active');\n\t\t\t\tvar panels = stack.childElements();\n\t\t\t\t$._each([].slice.apply(panels), function(idx, ctx) {\n\t\t\t\t\tif (idx === 0) {\n\t\t\t\t\t\tindicators += '<indicator class=\"active\" title=\"page 1 of'+panels.length+'\"><input type=\"radio\" name=\"group'+guid+'\"></indicator>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(ctx).attr('aria-hidden','true');\n\t\t\t\t\t\tindicators += \"<indicator title='\"+ (idx+1) +\" of \"+panels.length+\"'><input type='radio' name='group\"+guid+\"'></indicator>\";\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tindicators += \"</stack>\";\n\t\t\t\t// The maximum number of indicators in portrait view is 17.\n\t\t\t\t$(selector).parent().append(indicators);\n\t\t\t\tvar indicatorBase = $('#'+guid);\n\t\t\t\tindicatorBase.UIIdentifyChildNodes();\n\t\t\t\tvar indics = indicatorBase.childElements();\n\t\t\t\t$(indicatorBase).on('click', 'indicator', function(ctx) {\n\t\t\t\t\tvar item = ctx.nodeType === 1 ? $.ctx(ctx) : $.ctx(this);\n\t\t\t\t\tvar whichPanel = $(item).attr('ui-child-position');\n\t\t\t\t\tmyPager.scrollToPage(whichPanel,0);\n\t\t\t\t\tvar focusPanel = scrollerPanels[whichPanel]._first();\n\t\t\t\t\t$._each(indics, function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).removeClass('active');\n\t\t\t\t\t\tscrollerPanels.eq(idx).removeClass('active'); \n\t\t\t\t\t\tscrollerPanels.eq(idx).attr('aria-hidden','true');\n\t\t\t\t\t\tscrollerPanels.eq(idx).attr('visibility','hidden'); \n\t\t\t\t\t});\n\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\tvar activePanel = scrollerPanels.eq($(item).attr('ui-child-position'));\n\t\t\t\t\tactivePanel.addClass('active');\n\t\t\t\t\tactivePanel.removeAttr('aria-hidden');\n\t\t\t\t\tvar focusableChild = activePanel._first();\n\t\t\t\t\tfocusableChild.attr('tabindex','-1');\n\t\t\t\t});\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tUISetupPaging : function() {\n\t\t\t\tif ($(\"stack[ui-implements=paging]\")) {\n\t\t\t\t\tvar pagingStacks = $.els(\"stack[ui-implements=paging]\");\n\t\t\t\t\t$._each(pagingStacks, function(idx, stack) {\n\t\t\t\t\t\tvar indicatorStack = stack.nextElementSibling;\n\t\t\t\t\t\t$.UIPaging(stack, {\n\t\t\t\t\t\t\tsnap: true,\n\t\t\t\t\t\t\tmomentum: false,\n\t\t\t\t\t\t\thScrollbar: false,\n\t\t\t\t\t\t\tonScrollEnd: function () {\n\t\t\t\t\t\t\tvar ps = stack.nextElementSibling;\n\t\t\t\t\t\t\t$(ps).find('indicator.active').removeClass('active');\n\t\t\t\t\t\t\t$(ps).find('indicator:nth-child(' + (Number(this.currPageX)+1) + ')').addClass('active');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t$(function() {\n\t\t\t$.UISetupPaging();\n\t\t});\n\t\t\n\t\t$.extend($, {\n\t\t\t\n\t\t\tUIDeleteTableCell : function( options ) {\n\t\t\t\t/* options = {\n\t\t\t\t\tselector: selector,\n\t\t\t\t\teditButton: [label1, label2],\n\t\t\t\t\tdeleteButton: label3,\n\t\t\t\t\ttoolbar: toolbar,\n\t\t\t\t\tcallback: callback\n\t\t\t\t} */\n\t\t\t\tvar defaultCheckboxColor ='#2da2cd';\n\t\t\t\tvar checkboxHeight = 30;\n\t\t\t\tvar label1;\n\t\t\t\tif (options.editButton) {\n\t\t\t\t\tlabel1 = options.editButton[0];\n\t\t\t\t} else {\n\t\t\t\t\tlabel1 = 'Edit';\n\t\t\t\t}\n\t\t\t\tvar label2;\n\t\t\t\tif (options.editButton) {\n\t\t\t\t\tlabel2 = options.editButton[1];\n\t\t\t\t} else {\n\t\t\t\t\tlabel2 = 'Done';\n\t\t\t\t}\n\t\t\t\tvar label3;\n\t\t\t\tif (options.deleteButton) {\n\t\t\t\t\tlabel3 = options.deleteButton;\n\t\t\t\t} else {\n\t\t\t\t\tlabel3 = 'Delete';\n\t\t\t\t}\n\t\t\t\tvar callback = options.callback || function() {};\n\t\t\t\tthis.deletionList = [];\n\t\t\t\tvar listEl = $(options.selector);\n\t\t\t\tvar toolbarEl = $(options.toolbar);\n\t\t\t\tvar button = toolbarEl._first();\n\t\t\t\tbutton = button.reduceToNode();\n\t\t\t\ttry {\n\t\t\t\t\tif (button && button.nodeName === 'UIBUTTON') {\n\t\t\t\t\t\tbutton.attr('ui-contains','uibutton');\n\t\t\t\t\t}\n\t\t\t\t} catch(err) {}\n\t\t\t\tvar deleteButtonTmpl = $.concat('<uibutton role=\"button\" ui-kind=\"deletionListDeleteButton\" ui-bar-align=\"left\" ui-implements=\"delete\" class=\"disabled\" style=\"display: none;\"><label>', label3, '</label></uibutton>');\n\t\t\t\tvar editButtonTmpl = $.concat('<uibutton role=\"button\" ui-kind=\"deletionListEditButton\" ui-bar-align=\"right\"  ui-implements=\"edit\"',' ui-button-labels=\"',label1,' ',label2,'\"><label>', label1, '</label></uibutton>');\n\t\t\t\t$(toolbarEl).prepend(deleteButtonTmpl);\n\t\t\t\t$(toolbarEl).append(editButtonTmpl);\n\t\t\t\tvar deleteDisclosure = '<deletedisclosure><span><svg version=\"1.1\" \t id=\"svg3804\" xmlns:svg=\"http://www.w3.org/2000/svg\" \t xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"'+checkboxHeight+'\" height=\"'+checkboxHeight+'\" \t viewBox=\"0 0 48 48\" enable-background=\"new 0 0 48 48\" xml:space=\"preserve\"> <g id=\"layer1\" transform=\"matrix(2.8817229,0,0,2.9517892,5.3723918,5.2474312)\"> \t<path id=\"path3908\" style=\"fill:' + defaultCheckboxColor + ';fill-opacity:1;stroke:none\"  d=\"M10.252-0.225l2.574,1.581l-7.49,11.829l-6.015-4.376l1.851-2.626l3.357,2.373L10.252-0.225z\"/> </g> </svg></span></deletedisclosure>';\n\t\t\t\t$._each($.els(options.selector + \" > tablecell\"), function(idx, ctx) {\n\t\t\t\t\t$(ctx).prepend(deleteDisclosure);\n\t\t\t\t});\n\t\t\t\tlistEl.attr('data-deletable-items', '0');\n\t\t\t\tvar UIEditExecution = function() {\n\t\t\t\t\t$(options.toolbar + ' > uibutton[ui-implements=edit]').on($.userAction, \n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\tif ($('label', this).text() === label1) {\n\t\t\t\t\t\t\t\t$(this).UIToggleButtonLabel(label1, label2);\n\t\t\t\t\t\t\t\t$(this).attr('ui-implements', 'done');\n\t\t\t\t\t\t\t\tlistEl.addClass('ui-show-delete-disclosures');\n\t\t\t\t\t\t\t\t$(this).parent()._first().css({'display': '-webkit-inline-box'});\n\t\t\t\t\t\t\t\tvar toolbarButtons = toolbarEl.childElements();\n\t\t\t\t\t\t\t\tvar toolbarButton = toolbarButtons.eq(0).reduceToNode();\n\t\t\t\t\t\t\t\ttoolbarButton = toolbarButton.nodeName;\n\t\t\t\t\t\t\t\tif (/uibutton/i.test(toolbarButton)) {\n\t\t\t\t\t\t\t\t   toolbarEl.childElements().eq(1).css('display', 'none');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$._each($.els(\"tablecell > img\", listEl), function(idx, ctx) {\n\t\t\t\t\t\t\t\t\t$(ctx).css('-webkit-transform','translate3d(40px, 0, 0)');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(this).UIToggleButtonLabel(label1, label2);\n\t\t\t\t\t\t\t\t$(this).removeAttr('ui-implements');\n\t\t\t\t\t\t\t\t$(this).parent()._first().css('display', 'none');\n\t\t\t\t\t\t\t\t$(this).parent().childElements().eq(1).css('display', 'block');\n\t\t\t\t\t\t\t\tlistEl.removeClass('ui-show-delete-disclosures');\n\t\t\t\t\t\t\t\t$._each($.els('deletedisclosure'), function(idx, ctx) {\n\t\t\t\t\t\t\t\t\t$(ctx).removeClass('checked');\n\t\t\t\t\t\t\t\t\t$(ctx).closest('tablecell').removeClass('deletable');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (/uibutton/i.test(toolbarButton)) {\n\t\t\t\t\t\t\t\t   toolbarButtons.eq(1).css('display', '-webkit-inline-box');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$('uibutton[ui-implements=delete]').addClass('disabled');\n\t\t\t\t\t\t\t\t$._each($.els('tablecell > img', listEl), function(idx, ctx) {\n\t\t\t\t\t\t\t\t\t$(ctx).css('-webkit-transform','translate3d(0, 0, 0)');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tvar UIDeleteDisclosureSelection = function() {\n\t\t\t\t\t$._each($.els('deletedisclosure'), function(idx, disclosure) {\n\t\t\t\t\t\t$(disclosure).on('touchstart', function() {\n\t\t\t\t\t\t\tvar checkmark = $(disclosure).find('path');\n\t\t\t\t\t\t\tcheckmark.style.fill = '#fff';\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tcheckmark.style.fill = '#2da2cd';\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t});\t\t\t\t\t\t\n\t\t\t\t\t\t$(disclosure).parent().on('mouseover', function() {\n\t\t\t\t\t\t\tvar checkmark = $(disclosure).find('path');\n\t\t\t\t\t\t\tif (_jq || _zo) {\n\t\t\t\t\t\t\t\tcheckmark = checkmark[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckmark.style.fill = '#fff';\n\t\t\t\t\t\t});\t\t\t\t\n\t\t\t\t\t\t$(disclosure).parent().on('mouseout', function() {\n\t\t\t\t\t\t\tvar checkmark = $(disclosure).find('path');\n\t\t\t\t\t\t\tif (_jq || _zo) {\n\t\t\t\t\t\t\t\tcheckmark = checkmark[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckmark.style.fill = '#2da2cd';\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$(disclosure).on($.userAction, function() {\n\t\t\t\t\t\t\t$(disclosure).toggleClass('checked');\n\t\t\t\t\t\t\t$(disclosure).closest('tablecell').toggleClass('deletable');\n\t\t\t\t\t\t\t$('uibutton[ui-implements=delete]', toolbarEl).removeClass('disabled');\n\t\t\t\t\t\t\tif (!$(disclosure).closest('tablecell').hasClass('deletable')) {\n\t\t\t\t\t\t\t\tif (Number(listEl.attr(\"data-deletable-items\")) < 2) {\n\t\t\t\t\t\t\t\t\tlistEl.attr(\"data-deletable-items\", '0');\n\t\t\t\t\t\t\t\t\ttoolbarEl.find(\"uibutton[ui-implements=delete]\").addClass(\"disabled\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlistEl.attr(\"data-deletable-items\", Number(listEl.attr(\"data-deletable-items\")) - 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlistEl.attr('data-deletable-items', Number(listEl.attr(\"data-deletable-items\")) + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tvar UIDeletionExecution = function() {\n\t\t\t\t\t$._each($.els('uibutton[ui-implements=delete]'), function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).on('click', function() {\n\t\t\t\t\t\t\tif ($(this).hasClass('disabled')) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$._each($.els('.deletable'), function(idx, ctx) {\n\t\t\t\t\t\t\t\tlistEl.attr('data-deletable-items', parseInt(listEl.attr('data-deletable-items'), 10) - 1);\n\t\t\t\t\t\t\t\tif (!!callback) {\n\t\t\t\t\t\t\t\t\tcallback.call(this, ctx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$(ctx).remove();\n\t\t\t\t\t\t\t\tlistEl.attr('data-deletable-items', '0');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$(this).addClass('disabled');\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$(this).closest('view').find('scrollpanel').data('ui-scroller').refresh();\t\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tUIEditExecution();\n\t\t\t\tUIDeleteDisclosureSelection();\n\t\t\t\tUIDeletionExecution();\n\t\t\t},\n\t\t\t\n\t\t\tUIResetDeletionList : function(node, toolbar) {\n\t\t\t\tnode = $(node);\n\t\t\t\ttoolbar = $(toolbar);\n\t\t\t\tif (node.hasClass(\"ui-show-delete-disclosures\")) {\n\t\t\t\t\tnode.attr(\"data-deletable-items\", 0);\n\t\t\t\t\t$._each(node.childElements(), function(idx, ctx) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t$(ctx)._first().removeClass('checked');\n\t\t\t\t\t\t} catch(err) {}\n\t\t\t\t\t});\n\t\t\t\t\tnode.find(\"deletedisclosure\").removeClass(\"checked\");\n\t\t\t\t\tnode.removeClass(\"ui-show-delete-disclosures\");\n\t\t\t\t\tvar resetLabel = toolbar.find(\"uibutton[ui-kind=deletionListEditButton]\").attr(\"ui-button-labels\");\n\t\t\t\t\tresetLabel = resetLabel.split(\" \");\n\t\t\t\t\tresetLabel = resetLabel[0];\n\t\t\t\t\ttoolbar.find(\"uibutton[ui-kind=deletionListEditButton] > label\").text(resetLabel);\n\t\t\t\t\ttoolbar.find(\"uibutton[ui-kind=deletionListEditButton]\").attr(\"ui-implements\", \"edit\");\n\t\t\t\t\ttoolbar.find(\"uibutton[ui-kind=deletionListDeleteButton]\").css(\"display\", \"none\");\n\t\t\t\t\ttoolbar.find(\"uibutton[ui-kind=deletionListDeleteButton]\").toggleClass('disabled');\n\t\t\t\t\t$._each($.els(\"tablecell > img\", node), function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).css('-webkit-transform','translate3d(0, 0, 0)');\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t$._each($.els('tablecell', node), function(idx, ctx) {\n\t\t\t\t\t$(ctx).removeClass('deletable');\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tUIPopUpIsActive : false,\n\t\t\tUIPopUpIdentifier : null,\n\t\t\tUIPopUp : function( opts ) {\n\t\t\t\t/*\n\t\t\t\topts {\n\t\t\t\t\tid: 'alertID',\n\t\t\t\t\ttitle: 'Alert',\n\t\t\t\t\tmessage: 'This is a message from me to you.',\n\t\t\t\t\tcancelUIButton: 'Cancel',\n\t\t\t\t\tcontinueUIButton: 'Go Ahead',\n\t\t\t\t\tcallback: function() { // do nothing }\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tvar id = opts.id || $.UIUuid();\n\t\t\t\tvar title = opts.title || 'Alert!';\n\t\t\t\tvar message = opts.message || '';\n\t\t\t\tvar cancelUIButton = opts.cancelUIButton || 'Cancel';\n\t\t\t\tvar continueUIButton = opts.continueUIButton || 'Continue';\n\t\t\t\tvar callback = opts.callback || function() {};\n\t\t\t\tvar popup = $.concat('<popup role=\"alertdialog\" id=', id, ' ui-visible-state=\"hidden\" aria-hidden=\"true\"><panel><h1>', title, '</h1></toolbar>\t\t\t\t\t\t<p role=\"note\">', message, '</p><toolbar ui-placement=\"bottom\"><uibutton role=\"button\" ui-kind=\"action\" ui-implements=\"cancel\"><label>', cancelUIButton, '</label></uibutton><uibutton role=\"button\" ui-kind=\"action\" ui-implements=\"continue\"><label>', continueUIButton, '</label>\t\t\t\t\t\t\t</uibutton></toolbar></panel></popup>');\n\t\t\t\t$('app').append(popup);\n\t\t\t\tvar popupID = '#' + id;\n\t\t\t\t$(popupID).UIBlock('0.5');\n\t\t\t\tvar popupBtn = '#' + id + ' uibutton';\n\t\t\t\t$._each($.els(popupBtn), function(idx, ctx) {\n\t\t\t\t\t$(ctx).on('click', cancelClickPopup = function(e) {\n\t\t\t\t\t\tif ($(ctx).attr('ui-implements')==='continue') {\n\t\t\t\t\t\t\tcallback.call(callback, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$.UIClosePopup('#' + id);\n\t\t\t\t\t\t$('view[ui-navigation-status=current]').ariaShow();\n\t\t\t\t\t\t$('view[ui-navigation-status=current]').ariaFocusChild('h1');\n\t\t\t\t\t});\n\t\t\t\t\t$.UIPopUpIsActive = false;\n\t\t\t\t\t$.UIPopUpIdentifier = null;\n\t\t\t\t\t$(ctx).on('touchend', cancelTouchPopup = function(e) {\t\n\t\t\t\t\t\tif ($(this).attr('ui-implements')==='continue') {\n\t\t\t\t\t\t\tcallback.call(callback, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$.UIClosePopup('#' + id);\n\t\t\t\t\t\t$('view[ui-navigation-status=current]').ariaShow();\n\t\t\t\t\t\t$('view[ui-navigation-status=current]').ariaFocusChild('h1');\n\t\t\t\t\t});\n\t\t\t\t\t$.UIPopUpIsActive = false;\n\t\t\t\t\t$.UIPopUpIdentifier = null;\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tUIShowPopUp : function( options ) {\n\t\t\t\t$.UIPopUp(options);\n\t\t\t\t$.UIPopUpIsActive = true;\n\t\t\t\t$.UIPopUpIdentifier = '#' + options.id;\n\t\t\t\t$($.UIPopUpIdentifier).attr('aria-hidden', 'false');\n\t\t\t\tvar screenCover = $('mask');\n\t\t\t\tscreenCover.on('touchmove', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t\t\t$.UIPositionPopUp('#' + options.id);\n\t\t\t\tvar thePopup = $('#' + options.id);\n\t\t\t\tthePopup.UICenterElementToParent();\n\t\t\t\tscreenCover.attr('ui-visible-state', 'visible');\n\t\t\t\tthePopup.attr('ui-visible-state', 'visible');\n\t\t\t\tthePopup.ariaFocusChild('h1');\n\t\t\t\t$('view[ui-navigation-status=current]').attr('aria-hidden', 'true');\n\t\t\t\t$('view[ui-navigation-status=current]').ariaHide();\n\t\t\t\t$('view[ui-navigation-status=current]').css('display','none');\n\t\t\t\t$('view[ui-navigation-status=current]').css('display','block');\n\t\t\t},\n\t\t\t\n\t\t\tUIPositionPopUp : function(selector) {\n\t\t\t\t$.UIPopUpIsActive = true;\n\t\t\t\t$.UIPopUpIdentifier = selector;\n\t\t\t\tvar popup = $(selector).reduceToNode();\n\t\t\t\tvar tmpTop = ((window.innerHeight /2) + window.pageYOffset) - (popup.clientHeight /2) + 'px';\n\t\t\t\tvar tmpLeft = ((window.innerWidth / 2) - (popup.clientWidth / 2) + 'px');\n\t\t\t\t$(popup).css({left: tmpLeft, top: tmpTop}); \n\t\t\t},\n\t\t\t\n\t\t\tUIClosePopup : function ( selector ) {\n\t\t\t\t$(selector + ' uibutton[ui-implements=cancel]').UIRemovePopupBtnEvents('click', 'cancelClickPopup');\n\t\t\t\t\t$(selector + ' uibutton[ui-implements=continue]').UIRemovePopupBtnEvents('click', 'cancelTouchPopup');\n\t\t\t\t$(selector).UIUnblock();\n\t\t\t\t$('view[ui-navigation-status=current]').removeAttr('aria-hidden');\n\t\t\t\t$('view[ui-navigation-status=current]').ariaFocusChild('h1');\n\t\t\t\t$(selector).remove();\n\t\t\t\t$.UIPopUpIdentifier = null;\n\t\t\t\t$.UIPopUpIsActive = false;\n\t\t\t},\n\t\t\t\n\t\t\tUIRepositionPopupOnOrientationChange : function ( ) {\n\t\t\t\t$.body.bind('orientationchange', function() {\n\t\t\t\t\tif (window.orientation === 90 || window.orientation === -90) {\n\t\t\t\t\t\tif ($.UIPopUpIsActive) {\n\t\t\t\t\t\t\t$.UIPositionPopUp($.UIPopUpIdentifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($.UIPopUpIsActive) {\n\t\t\t\t\t\t\t$.UIPositionPopUp($.UIPopUpIdentifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow.addEventListener('resize', function() {\n\t\t\t\t\tif ($.UIPopUpIsActive) {\n\t\t\t\t\t\t$.UIPositionPopUp($.UIPopUpIdentifier);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t},\n\t\t\t\n\t\t\tUIShowActionSheet : function(actionSheetID) {\n\t\t\t\t$.app.data('ui-action-sheet-id', actionSheetID);\n\t\t\t\tvar actionsheet = $(actionSheetID);\n\t\t\t\tactionsheet.css('display','block');\n\t\t\t\tactionsheet.UIBlock();\n\t\t\t\tactionsheet.attr('aria-hidden','false');\n\t\t\t\t$('view[ui-navigation-status=current]').css('display','none');\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$('view[ui-navigation-status=current]').css('display','-webkit-box');\n\t\t\t\t},100);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tactionsheet.ariaFocusChild('h3');\n\t\t\t\t},1000);\n\t\t\t\t$('view[ui-navigation-status=current]').attr('aria-hidden','true');\n\t\t\t\tvar screenCover = $('mask');\n\t\t\t\tscreenCover.css({'opacity': '.5'});\n\t\t\t\tscreenCover.attr('ui-visible-state', 'visible');\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$(actionSheetID).removeClass('hidden');\n\t\t\t\t}, 1);\n\t\t\t\tscreenCover.on('touchmove', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t\t\t$(actionSheetID).find('scrollpanel').data('ui-scroller').refresh();\n\t\t\t},\n\t\t\t\n\t\t\tUIHideActionSheet : function() {\n\t\t\t\tvar actionSheetID = $.app.data('ui-action-sheet-id');\n\t\t\t\tactionSheet = $(actionSheetID);\n\t\t\t\ttry { \n\t\t\t\t\tactionSheet.addClass('hidden');\n\t\t\t\t\tactionSheet.UIUnblock();\n\t\t\t\t\tactionSheet.attr('aria-hidden','true');\n\t\t\t\t\t$('view[ui-navigation-status=current]').removeAttr('aria-hidden');\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tactionSheet.css('display','none');\n\t\t\t\t\t},500);\n\t\t\t\t\t$('view[ui-navigation-status=current]').ariaFocusChild('h1');\n\t\t\t\t } catch(e) {}\n\t\t\t\t$.app.removeData('ui-action-sheet-id');\n\t\t\t},\n\t\t\t\n\t\t\tUIReadjustActionSheet : function() {\n\t\t\t\tvar actionSheetID = '';\n\t\t\t\tif ($.app.data('ui-action-sheet-id')) {\n\t\t\t\t\tactionSheetID = $.app.data('ui-action-sheet-id');\n\t\t\t\t\t$(actionSheetID).css({'right': '0px', 'bottom': '0px', 'left': '0px'});\n\t\t\t\t\tif ($.touchEnabled) {\n\t\t\t\t\t\tif ($.standalone) {\n\t\t\t\t\t\t\t$(actionSheetID).css({'right': '0px', 'bottom': '0px', 'left': '0px'});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(actionSheetID).css({'right': '0px', 'bottom': '0px', 'left': '0px', '-webkit-transform': 'translate3d(0,0,0)'});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.UIPositionMask();\n\t\t\t},\n\t\t\t\n\t\t\tUIAlphabeticalList : function() {\n\t\t\t\tvar alphaTable = _cc ? $(\"tableview[ui-kind='titled-list alphabetical']\") : $(\"tableview[ui-kind='titled-list alphabetical']\")[0];\n\t\t\t\tif (alphaTable) {\n\t\t\t\t\tvar tableview = $(\"tableview[ui-kind='titled-list alphabetical']\");\n\t\t\t\t\tvar titles = [];\n\t\t\t\t\tvar uuidSeed = $.UIUuid();\n\t\t\t\t\tvar counter = 0;\n\t\t\t\t\tvar alphabeticalList = '<stack ui-kind=\"alphabetical-list\">';\n\t\t\t\t\tvar alphabeticalListItems = \"\";\n\t\t\t\t\tvar tableheaders = tableview.findAll(\"tableheader\");\n\t\t\t\t\t$._each(tableheaders, function(idx, title) {\n\t\t\t\t\t\ttitle = $(title);\n\t\t\t\t\t\ttitles.push(title.text());\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\ttitle.attr(\"id\", $.concat(\"alpha_\", title.text(), uuidSeed, counter));\n\t\t\t\t\t\talphabeticalListItems += $.concat('<span href=\"#alpha_', title.text(), uuidSeed, counter, ' \">', title.text(), '</span>');\n\t\t\t\t\t});\n\t\t\t\t\talphabeticalList += alphabeticalListItems + '</stack>';\n\t\t\t\t\ttableview.closest(\"scrollpanel\").after(alphabeticalList);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar scroller = $(\"tableview[ui-kind='titled-list alphabetical']\").closest(\"scrollpanel\");\n\t\t\t\tvar sc = scroller.reduceToNode();\n\t\t\t\tscroller.data('ui-scroller').destroy();\n\t\t\t\tvar newScroller = new iScroll(sc, {snap:true});\n\t\t\t\tscroller.data('ui-scroller', newScroller);\n\t\t\t\t$.app.on(\"click\",\"stack[ui-kind='alphabetical-list'] > span\",  function(ctx) { \n\t\t\t\t\tvar alpha = $.ctx(ctx) || $(this);\n\t\t\t\t\tscroller.data('ui-scroller').scrollToElement(alpha.attr(\"href\"));\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tUIPositionMask : function() {\n\t\t\t\tif ($.els(\"mask\").length > 0) {\n\t\t\t\t\t$(\"mask\").css({\"height\": + (window.innerHeight + window.pageYOffset), width : + window.innerWidth});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUICancelSplitViewToggle : function () {\n\t\t\t\t$.body.addClass('SplitViewFixed');\n\t\t\t},\n\t\t\t\n\t\t\trootview : $('rootview'),\n\t\t\tresizeEvt : ('onorientationchange' in window ? 'orientationchange' : 'resize'),\n\t\t\t\n\t\t\tUISplitView : function ( ) {\n\t\t\t\tif ($.body.hasClass('SplitViewFixed')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar buttonLabel = $(\"rootview > panel > view[ui-navigation-status=current] > navbar\").text();\n\t\t\t\t$(\"detailview > navbar\").append(\"<uibutton id ='showRootView'  class='navigation' ui-bar-align='left'>\"\n\t\t\t+ buttonLabel + \"</uibutton>\");\n\t\t\t\tif (window.innerWidth > window.innerHeight) {\n\t\t\t\t\t$.body.addClass(\"landscape\");\n\t\t\t\t\t$.body.removeClass(\"portrait\");\n\t\t\t\t\t$.rootview.css({display: \"block\", height: \"100%\", \"margin-bottom\": \"1px\"});\n\t\t\t\t\t$._each($.els('rootview scrollpanel'), function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).css({overflow: \"hidden\", height: ($.rootview.innerHeight - 45)+'px'});\n\t\t\t\t\t\t$(ctx).data('ui-scroller').refresh();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$.body.addClass(\"portrait\");\n\t\t\t\t\t$.body.removeClass(\"landscape\");\n\t\t\t\t\t$.rootview.css({display: 'none','height': (window.innerHeight - 100) + \"px\"});\n\t\t\t\t\t\n\t\t\t\t\t$._each($.els('rootview scrollpanel'), function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).css({overflow: \"hidden\", height:(window.innerHeight - 155)+'px'});\n\t\t\t\t\t\t$(ctx).data('ui-scroller', new iScroll(ctx));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$(\"detailview navbar h1\").text($.els(\"tableview[ui-implements=detail-menu] > tablecell\").eq(0).text());\n\t\t\t},\n\t\t\t\n\t\t\tUISetSplitviewOrientation : function() {\n\t\t\t\tif ($.body.hasClass(\"SplitViewFixed\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ($.resizeEvt) {\n\t\t\t\t\tif (window.innerWidth > window.innerHeight) {\n\t\t\t\t\t\t$.body.addClass(\"landscape\");\n\t\t\t\t\t\t$.body.removeClass(\"portrait\");\n\t\t\t\t\t\t$.rootview.css({display: \"block\", height: \"100%\", \"margin-bottom\": \"1px\"});\t\t\t\t\t\t\n\t\t\t\t\t\t$._each($.els('rootview scrollpanel'), function(idx, ctx) {\n\t\t\t\t\t\t\t$(ctx).css({overflow: \"hidden\", height: \"100%\"});\n\t\t\t\t\t\t\t$(ctx).data('ui-scroller').refresh();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$.app.UIUnblock();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$.app.UIUnblock();\n\t\t\t\t\t\t$.body.addClass(\"portrait\");\n\t\t\t\t\t\t$.body.removeClass(\"landscape\");\n\t\t\t\t\t\t$.rootview.css({display: \"none\", height: (window.innerHeight - 100)+'px'});\n\t\t\t\t\t\t$._each($.els('rootview scrollpanel'), function(idx, ctx) {\n\t\t\t\t\t\t\t$(ctx).css({overflow: \"hidden\", height:(window.innerHeight - 155)+'px'});\n\t\t\t\t\t\t\t$(ctx).data('ui-scroller').refresh();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t$.UIEnableScrolling();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUIToggleRootView : function() {\n\t\t\t\tif ($.body.hasClass(\"SplitViewFixed\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ($.rootview.css(\"display\") === \"none\") {\n\t\t\t\t\t$.rootview.css(\"display\", \"block\");\n\t\t\t\t\t$.app.UIBlock(\".01\");\n\t\t\t\t\t$._each($.els('rootview scrollpanel'), function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).data('ui-scroller').refresh();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$.rootview.css(\"display\",\"none\");\n\t\t\t\t\t$.app.UIUnblock();\n\t\t\t\t\t$._each($.els('rootview scrollpanel'), function(idx, ctx) {\n\t\t\t\t\t\t$(ctx).data('ui-scroller').refresh();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\t\t\t\n\t\t\tUICheckForSplitView : function ( ) {\n\t\t\t\tif ($.body.hasClass(\"SplitViewFixed\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar splitview = $(\"splitview\");\n\t\t\t\tif (splitview) splitview = splitview.reduceToNode();\n\t\t\t\tif (splitview) {\n\t\t\t\t\t$.UISplitView();\n\t\t\t\t\t$(\"#showRootView\").on(\"click\", function() {\n\t\t\t\t\t\t$.UIToggleRootView();\n\t\t\t\t\t});\n\t\t\t\t\t$.body.on(\"orientationchange\", function(){\n\t\t\t\t\t\t$.UISetSplitviewOrientation();\n\t\t\t\t\t});\n\t\t\t\t\twindow.onresize = function() {\n\t\t\t\t\t\t$.UISetSplitviewOrientation();\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUICurrentSplitViewDetail : null,\n\t\t\t\n\t\t\tdetermineMaxPopoverHeight : function() {\n\t\t\t\tvar screenHeight = window.innerHeight;\n\t\t\t\tvar toolbarHeight;\n\t\t\t\ttry {\n\t\t\t\t\tif ($('navbar')) {\n\t\t\t\t\t\ttoolbarHeight = $('navbar').clientHeight;\n\t\t\t\t\t}\n\t\t\t\t\tvar toolbar = $('toolbar').reduceToNode();\n\t\t\t\t\tif (toolbar) {\n\t\t\t\t\t\tif (!$('toolbar').attr('ui-placement')) {\n\t\t\t\t\t\t\ttoolbarHeight = toolbar.clientHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch(err) {}\n\t\t\t\tscreenHeight = screenHeight - toolbarHeight;\n\t\t\t\treturn screenHeight; \t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tdeterminePopoverWidth : function() {\n\t\t\t\tvar screenWidth = window.innerWidth;\n\t\t\t},\n\t\t\t\n\t\t\tadjustPopoverHeight : function( popover ) {\n\t\t\t\tvar availableVerticalSpace = $.determineMaxPopoverHeight();\n\t\t\t\t$(popover).find(\"section\").css({\"max-height\":(availableVerticalSpace - 100) + \"px\"});\n\t\t\t\tvar popoverID = popover.split(\"#\");\n\t\t\t\tpopoverID = popoverID[1];\n\t\t\t},\n\t\t\t\n\t\t\tdeterminePopoverPosition : function( triggerElement, popoverOrientation, pointerOrientation ) {\n\t\t\t\tpointerOrientation = pointerOrientation.toLowerCase();\n\t\t\t\tvar trigEl = $(triggerElement).reduceToNode();\n\t\t\t\tvar popoverPos = {};\n\t\t\t\tif (pointerOrientation === 'left') {\n\t\t\t\t\tpopoverPos.left = trigEl.offsetLeft + 'px';\n\t\t\t\t} else if (pointerOrientation === 'center') {\n\t\t\t\t\tpopoverPos.left = (trigEl.offsetLeft + (trigEl.offsetWidth/2) - 160) + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tpopoverPos.left = ((trigEl.offsetLeft + trigEl.offsetWidth) - 280) +'px';\n\t\t\t\t}\n\t\t\t\tpopoverPos.top = (trigEl.offsetTop + trigEl.offsetHeight + 20) +'px';\n\t\t\t\treturn popoverPos;\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tUIPopover : function( opts ) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar popoverID = '';\n\t\t\t\tvar triggerElement = opts.triggerElement;\n\t\t\t\tvar popoverOrientation = opts.popoverOrientation;\n\t\t\t\tvar pointerOrientation = opts.pointerOrientation;\n\t\t\t\tif (opts) { \n\t\t\t\t\tpopoverID = opts.id ? opts.id : $.UIUuid();\n\t\t\t\t\ttitle = opts.title ? $.concat('<header><h3>', opts.title, '</h3></header>') : \"\";\n\t\t\t\t}\n\t\t\t\tvar trigEl = $(triggerElement);\n\t\t\t\tvar pos = $.determinePopoverPosition(triggerElement, popoverOrientation, pointerOrientation);\t\n\t\t\t\tvar popoverShell = $.concat('<popover ', 'id=\"', popoverID, '\" ui-poppover-position=\"', pointerOrientation, '\"', ' data-popover-trigger=\"#', trigEl.attr(\"id\"), '\" data-popover-orientation=\"', popoverOrientation, '\" data-popover-pointer-orientation=\"', pointerOrientation, '\">', title, '<section><scrollpanel class=\"popover-content\"></scrollpanel></section></popover>');\n\t\t\t\tpopoverShell;\n\t\t\t\t$.app.append(popoverShell);\n\t\t\t\t\n\t\t\t\t// Apply positioning to popover:\n\t\t\t\t$('#'+popoverID).css(pos);\n\t\t\t\t\n\t\t\t\t// Adjust the left or bottom position of the popover if it is beyond the viewport:\n\t\t\t\tif (!!opts.id) {\n\t\t\t\t\t$.adjustPopoverHeight(\"#\" + opts.id);\n\t\t\t\t\t$(\"#\" + opts.id).UIAdjustPopoverPosition();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tUICancelPopover : function (popover) {\n\t\t\t\t$.UIHidePopover(popover);\n\t\t\t},\n\t\t\t\n\t\t\tUIHidePopover : function (popover) {\n\t\t\t\t$.UIPopover.activePopover = null;\n\t\t\t\t$(popover).css({\"opacity\": 0, \"-webkit-transform\": \"scale(0)\"});\n\t\t\t\tpopover.UIUnblock();\n\t\t\t},\n\t\t\t\n\t\t\tUIEnablePopoverScrollpanels : function ( options ) {\n\t\t\t\ttry {\n\t\t\t\t\tvar count = 0;\n\t\t\t\t\t$._each($.els(\"popover scrollpanel\"), function(idx, item) {\n\t\t\t\t\t\t$(item).data('ui-scroller', new iScroll(item.parentNode));\n\t\t\t\t\t});\n\t\t\t\t} catch(e) { }\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tform2JSON : function(rootNode, delimiter) {\n\t\t\t\t//rootNode = typeof rootNode == 'string' ? $(rootNode) : rootNode;\n\t\t\t\trootNode = $.el(rootNode);\n\t\t\t\tdelimiter = delimiter || '.';\n\t\t\t\tvar formValues = getFormValues(rootNode);\n\t\t\t\tvar result = {};\n\t\t\t\tvar arrays = {};\n\t\t\t\t\n\t\t\t\tfunction getFormValues(rootNode) {\n\t\t\t\t\tvar result = [];\n\t\t\t\t\tvar currentNode = rootNode.firstChild;\n\t\t\t\t\twhile (currentNode) {\n\t\t\t\t\t\tif (currentNode.nodeName.match(/INPUT|SELECT|TEXTAREA/i)) {\n\t\t\t\t\t\t\tresult.push({ name: currentNode.name, value: getFieldValue(currentNode)});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar subresult = getFormValues(currentNode);\n\t\t\t\t\t\t\tresult = result.concat(subresult);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tfunction getFieldValue(fieldNode) {\n\t\t\t\t\tif (fieldNode.nodeName === 'INPUT') {\n\t\t\t\t\t\tif (fieldNode.type.toLowerCase() === 'radio' || fieldNode.type.toLowerCase() === 'checkbox') {\n\t\t\t\t\t\t\tif (fieldNode.checked) {\n\t\t\t\t\t\t\t\treturn fieldNode.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!fieldNode.type.toLowerCase().match(/button|reset|submit|image/i)) {\n\t\t\t\t\t\t\t\treturn fieldNode.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (fieldNode.nodeName === 'TEXTAREA') {\n\t\t\t\t\t\t\treturn fieldNode.value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (fieldNode.nodeName === 'SELECT') {\n\t\t\t\t\t\t\t\treturn getSelectedOptionValue(fieldNode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tfunction getSelectedOptionValue(selectNode) {\n\t\t\t\t\tvar multiple = selectNode.multiple;\n\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\treturn selectNode.value;\n\t\t\t\t\t}\n\t\t\t\t\tif (selectNode.selectedIndex > -1) {\n\t\t\t\t\t\tvar result = [];\n\t\t\t\t\t\tvar options = $.els('option', selectNode);\n\t\t\t\t\t\t$._each(function(idx, ctx) {\n\t\t\t\t\t\t\tif (ctx.selected) {\n\t\t\t\t\t\t\t\tresult.push(ctx.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t/*$$('option', selectNode).each(function(item) {\n\t\t\t\t\t\t\tif (item.selected) {\n\t\t\t\t\t\t\t\tresult.push(item.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});*/\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}    \n\t\t\t\t$._each(formValues, function(idx, item) {\n\t\t\t\t//formValues.each(function(item) {\n\t\t\t\t\tvar value = item.value;\n\t\t\t\t\tif (value !== '') {\n\t\t\t\t\t\tvar name = item.name;\n\t\t\t\t\t\tvar nameParts = name.split(delimiter);\n\t\t\t\t\t\tvar currResult = result;\n\t\t\t\t\t\tfor (var j = 0; j < nameParts.length; j++) {\n\t\t\t\t\t\t\tvar namePart = nameParts[j];\n\t\t\t\t\t\t\tvar arrName;\n\t\t\t\t\t\t\tif (namePart.indexOf('[]') > -1 && j == nameParts.length - 1) {\n\t\t\t\t\t\t\t\tarrName = namePart.substr(0, namePart.indexOf('['));\n\t\t\t\t\t\t\t\tif (!currResult[arrName]) currResult[arrName] = [];\n\t\t\t\t\t\t\t\tcurrResult[arrName].push(value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (namePart.indexOf('[') > -1) {\n\t\t\t\t\t\t\t\t\tarrName = namePart.substr(0, namePart.indexOf('['));\n\t\t\t\t\t\t\t\t\tvar arrIdx = namePart.replace(/^[a-z]+\\[|\\]$/gi, '');\n\t\t\t\t\t\t\t\t\tif (!arrays[arrName]) {\n\t\t\t\t\t\t\t\t\t\tarrays[arrName] = {};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!currResult[arrName]) {\n\t\t\t\t\t\t\t\t\t\tcurrResult[arrName] = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (j == nameParts.length - 1) {\n\t\t\t\t\t\t\t\t\t\tcurrResult[arrName].push(value);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (!arrays[arrName][arrIdx]) {\n\t\t\t\t\t\t\t\t\t\t\tcurrResult[arrName].push({});\n\t\t\t\t\t\t\t\t\t\t\tarrays[arrName][arrIdx] = \n\t\t\t\t\t\t\t\t\t\t\tcurrResult[arrName][currResult[arrName].length - 1];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcurrResult = arrays[arrName][arrIdx];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (j < nameParts.length - 1) { \n\t\t\t\t\t\t\t\t\t\tif (!currResult[namePart]) {\n\t\t\t\t\t\t\t\t\t\t\tcurrResult[namePart] = {};\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcurrResult = currResult[namePart];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcurrResult[namePart] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t}\n\t\t});\n\t\t\n\t\t$.UISpinner = $.UIPopover;\n\t\t\n\t\t$.extend($.UIPopover, {\n\t\t\tactivePopover : null,\n\t\t\t\n\t\t\tshow : function ( popover ) {\n\t\t\t\tif ($.UIPopover.activePopover === null) {\n\t\t\t\t\tpopover.UIBlock(\".01\");\n\t\t\t\t\tpopover.UIRepositionPopover();\n\t\t\t\t\tvar setPopoverCSS = function() {\n\t\t\t\t\t\tpopover.css({\"opacity\": 1, \"-webkit-transform\": \"scaleY(1)\", 'overflow':'visible'});\n\t\t\t\t\t};\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tsetPopoverCSS();\n\t\t\t\t\t},0);\n\t\t\t\t\t$.UIPopover.activePopover = popover.id || popover[0].id;\n\t\t\t\n\t\t\t\t\t$.UIEnableScrolling();\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.UIEnablePopoverScrollpanels();\n\t\t\t},\n\t\t\t\n\t\t\thide : function ( popover ) {\n\t\t\t\tif ($.UIPopover.activePopover) {\n\t\t\t\t\tpopover.css({\"opacity\": 0, \"-webkit-transform\": \"scaleY(0)\"});\n\t\t\t\t\t$.UIPopover.activePopover = null;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t});\n\t\t// Reposition any visible popovers when window resizes.\n\t\twindow.onresize = function() {\n\t\t\tvar availableVerticalSpace = $.determineMaxPopoverHeight();\n\t\t\t$._each($.els(\"popover\"), function(idx, popover) {\n\t\t\t\t$(popover).find(\"section\").css({\"max-height\": (availableVerticalSpace - 100)+'px'});\n\t\t\t\t$(popover).UIRepositionPopover();\n\t\t\t});\n\t\t};\n\t\t$.app.on(\"click\", \"mask\", function(mask) {\n\t\t\tvar $this = mask || $(this);\n\t\t\tif ($.UIPopover.activePopover) {\n\t\t\t\t$.UIPopover.hide($(\"#\"+$.UIPopover.activePopover));\n\t\t\t\t$.app.UIUnblock();\n\t\t\t}\n\t\t\tif ($.rooview && $.rootview.css(\"position\") === \"absolute\") {\n\t\t\t\t$.rootview.style.display = \"none\";\n\t\t\t\t$.rootview.UIUnblock();\n\t\t\t}\n\t\t});\n\t});\n\t\n\tdocument.addEventListener('orientationchange', function() {\n\t\t$.UIReadjustActionSheet();\n\t}, false);\n\t\n\t$(function() {\n\t\t$.UICheckForSplitView();\n\t\tif (!typeof $.rootview === 'object') {\n\t\t\t$('body').on('click', 'mask', function() {\n\t\t\t\ttry {\n\t\t\t\t\t$.rootview.css('display', 'none');\n\t\t\t\t\t$.rootview.UIUnblock();\n\t\t\t\t} catch(err) {}\n\t\t\t});\n\t\t}\n\t\tif (\"stack[ui-kind='titled-list alphabetical']\") {\n\t\t\t$.UIAlphabeticalList(); \n\t\t}\n\t\t$.UIRepositionPopupOnOrientationChange();\n\t\t$._each($.els('uibutton'), function(idx, ctx) {\n\t\t\t$(ctx).attr('role','button');\n\t\t});\n\t});\n})();\n"]],"start1":0,"start2":0,"length1":0,"length2":79384}]],"length":79384,"saved":false}
